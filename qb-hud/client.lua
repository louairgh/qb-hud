local QBCore = exports['qb-core']:GetCoreObject()
local PlayerData = QBCore.Functions.GetPlayerData()
local config = Config
local speedMultiplier = config.UseMPH and 2.23694 or 3.6
local seatbeltOn = false
local cruiseOn = false
local showAltitude = false
local showSeatbelt = false
local nos = 0
local stress = 0
local hunger = 100
local thirst = 100
local cashAmount = 0
local bankAmount = 0
local nitroActive = 0
local harness = 0
local hp = 100
local armed = 0
local parachute = -1
local oxygen = 100
local dev = false
local playerDead = false
local showMenu = false
local showCircleB = false
local showSquareB = false
local Menu = config.Menu
local CinematicHeight = 0.2
local w = 0
local radioActive = false

---------------------------------- SAFEZONE -----------------------------------

local SafeZone = false

Citizen.CreateThread(function()
while true do 
    IsInSafeZone()
    Citizen.Wait(1000)
end
end)

local Hunting = CircleZone:Create(vector3(-1045.28, 4591.19, 120.67), 500.0, {
    name="Hungting",
    debugPoly = false,
})

local IllegalHunting = CircleZone:Create(vector3(870.01, 5158.01, 452.54), 500.0, {
    name="IllegalHunting",
    debugPoly = false,
})

local Hotel = PolyZone:Create({
    vector2(-371.8846130371, -855.71673583984),
    vector2(-371.57205200196, -967.6898803711),
    vector2(-355.75534057618, -1018.8529052734),
    vector2(-352.82861328125, -1030.500366211),
    vector2(-277.69909667968, -1058.3354492188),
    vector2(-281.67517089844, -1073.0261230468),
    vector2(-357.67370605468, -1046.1140136718),
    vector2(-357.6390991211, -1144.8548583984),
    vector2(-298.46975708008, -1158.3098144532),
    vector2(-259.55349731446, -1159.5714111328),
    vector2(-251.93467712402, -1119.241821289),
    vector2(-242.1040649414, -1120.9565429688),
    vector2(-235.37731933594, -1103.161743164),
    vector2(-227.15460205078, -1106.7901611328),
    vector2(-159.45516967774, -923.89654541016),
    vector2(-76.030158996582, -853.12060546875),
    vector2(-108.26197814942, -809.75457763672),
    vector2(-166.53742980958, -780.28497314454),
    vector2(-204.78411865234, -859.7896118164),
    vector2(-256.6501159668, -844.75769042968),
    vector2(-294.61685180664, -830.5634765625),
    vector2(-371.5802307129, -826.22784423828)
  }, {
    name="Hotel",
    -- minZ = 30.564701080322,
    -- maxZ = 53.604679107666
    debugPoly = false
  })

  local hotell2s = PolyZone:Create({
    vector2(-1401.3267822266, -61.31297302246),
  vector2(-1277.6170654296, -63.847026824952),
  vector2(-899.50012207032, -246.78871154786),
  vector2(-1049.3911132812, -226.89143371582),
  vector2(-1308.6143798828, -363.34439086914),
  vector2(-1426.7478027344, -179.80865478516)
  }, {
    name="hotell2s",
    -- minZ = 30.564701080322,
    -- maxZ = 53.604679107666
    debugPoly = false
  })

local RedPark = PolyZone:Create({
    vector2(-370.82214355468, -641.65185546875),
    vector2(-271.25759887696, -641.73840332032),
    vector2(-279.09756469726, -683.10498046875),
    vector2(-304.6322631836, -738.57989501954),
    vector2(-265.1898803711, -753.09191894532),
    vector2(-255.27912902832, -712.19342041016),
    vector2(-216.96524047852, -700.240234375),
    vector2(-268.32138061524, -839.94720458984),
    vector2(-295.08087158204, -829.71881103516),
    vector2(-281.37661743164, -786.5326538086),
    vector2(-319.50897216796, -773.54388427734),
    vector2(-334.30255126954, -787.10760498046),
    vector2(-334.75762939454, -826.08984375),
    vector2(-371.20227050782, -824.7241821289)
  }, {
    name="RedPark",
    --minZ = 32.315227508544,
    --maxZ = 48.175243377686
    debugPoly = false
  })

local PillboxH = PolyZone:Create({
    vector2(206.06977844238, -330.72616577148),
    vector2(255.6318359375, -344.306640625),
    vector2(267.10034179688, -312.13269042968),
    vector2(270.33749389648, -306.7798461914),
    vector2(278.39422607422, -309.76641845704),
    vector2(282.7960510254, -313.26928710938),
    vector2(316.69473266602, -324.65557861328),
    vector2(347.5372619629, -335.66192626954),
    vector2(423.38067626954, -365.18325805664),
    vector2(446.94589233398, -384.87362670898),
    vector2(356.91690063476, -436.55108642578),
    vector2(336.50137329102, -453.28875732422),
    vector2(400.74130249024, -463.29373168946),
    vector2(445.5485534668, -485.90823364258),
    vector2(449.7671508789, -536.03448486328),
    vector2(443.10311889648, -553.32250976562),
    vector2(429.24227905274, -572.34997558594),
    vector2(463.31887817382, -574.3296508789),
    vector2(466.3179321289, -595.09753417968),
    vector2(440.35971069336, -595.32727050782),
    vector2(433.28240966796, -664.31646728516),
    vector2(424.109375, -687.67736816406),
    vector2(370.67715454102, -686.5064086914),
    vector2(323.0824584961, -670.94116210938),
    vector2(333.24700927734, -645.5517578125),
    vector2(337.59814453125, -633.36267089844),
    vector2(303.00247192382, -620.302734375),
    vector2(268.06182861328, -667.61694335938),
    vector2(252.67678833008, -664.32055664062),
    vector2(248.2133026123, -668.38037109375),
    vector2(229.4398803711, -723.23919677734),
    vector2(275.85250854492, -740.82666015625),
    vector2(243.80278015136, -823.23498535156),
    vector2(275.78073120118, -833.83776855468),
    vector2(284.26522827148, -809.15899658204),
    vector2(321.79071044922, -820.7105102539),
    vector2(320.25067138672, -831.56719970704),
    vector2(360.55224609375, -834.92077636718),
    vector2(367.11944580078, -875.70520019532),
    vector2(302.85729980468, -876.42291259766),
    vector2(313.69430541992, -903.98736572266),
    vector2(296.85006713868, -938.89923095704),
    vector2(259.86926269532, -1027.8348388672),
    vector2(263.5881652832, -1070.6677246094),
    vector2(233.63247680664, -1074.7022705078),
    vector2(227.42468261718, -1123.8209228516),
    vector2(188.23065185546, -1120.5164794922),
    vector2(192.94148254394, -1053.9624023438),
    vector2(159.0486907959, -1040.1600341796),
    vector2(154.44367980958, -1038.8891601562),
    vector2(147.84419250488, -1059.1072998046),
    vector2(177.48356628418, -1074.5728759766),
    vector2(159.12518310546, -1084.2136230468),
    vector2(174.96586608886, -1088.812866211),
    vector2(126.9594116211, -1090.3189697266),
    vector2(95.766990661622, -1083.0889892578),
    vector2(86.458045959472, -1114.0025634766),
    vector2(80.08275604248, -1123.0944824218),
    vector2(-80.42797088623, -1127.6746826172),
    vector2(-129.14222717286, -1123.656616211),
    vector2(-120.39518737792, -1114.025756836),
    vector2(-100.35913085938, -1075.5776367188),
    vector2(-54.685161590576, -961.05712890625),
    vector2(-57.70860671997, -916.13079833984),
    vector2(-5.6140522956848, -922.16943359375),
    vector2(58.94132232666, -756.47521972656)
  }, {
    name="PillboxH",
    --minZ = 30.635257720948,
    --maxZ = 51.915237426758
      debugPoly = false
  })

local MRPD = PolyZone:Create({
    vector2(490.0880432129, -866.17120361328),
    vector2(518.66027832032, -865.98645019532),
    vector2(514.82720947266, -971.09405517578),
    vector2(517.05255126954, -1134.9655761718),
    vector2(519.98724365234, -1169.3638916016),
    vector2(469.34628295898, -1170.7736816406),
    vector2(386.72891235352, -1169.1298828125),
    vector2(385.37057495118, -1119.0627441406),
    vector2(381.4700012207, -1079.1313476562),
    vector2(316.22079467774, -1072.1947021484),
    vector2(317.7325744629, -1119.2794189454),
    vector2(331.36972045898, -1119.7436523438),
    vector2(348.15982055664, -1168.1627197266),
    vector2(307.28036499024, -1167.9322509766),
    vector2(305.40927124024, -1148.912109375),
    vector2(266.67385864258, -1147.4974365234),
    vector2(264.80917358398, -1119.8743896484),
    vector2(291.58673095704, -1119.2348632812),
    vector2(292.27584838868, -1069.665649414),
    vector2(233.26676940918, -1074.5877685546),
    vector2(250.17413330078, -1026.5854492188),
    vector2(327.11505126954, -1027.7197265625),
    vector2(337.75958251954, -1027.8934326172),
    vector2(380.40298461914, -1024.0072021484),
    vector2(385.93664550782, -1001.025817871),
    vector2(336.80084228516, -1001.9525756836),
    vector2(318.91809082032, -1005.589416504),
    vector2(317.17224121094, -994.8046875),
    vector2(351.01928710938, -996.69720458984),
    vector2(386.36618041992, -997.11456298828),
    vector2(386.75598144532, -966.24780273438),
    vector2(303.35467529296, -963.26275634766),
    vector2(303.65130615234, -939.46002197266),
    vector2(390.35919189454, -941.50439453125),
    vector2(393.19290161132, -876.53161621094),
    vector2(357.46633911132, -873.54510498046),
    vector2(344.27249145508, -833.58612060546),
    vector2(360.73440551758, -833.43841552734),
    vector2(361.13919067382, -823.08624267578),
    vector2(372.32934570312, -822.84045410156),
    vector2(393.53121948242, -830.47717285156),
    vector2(392.82180786132, -771.80944824218),
    vector2(393.32482910156, -736.28436279296),
    vector2(418.05026245118, -731.8609008789),
    vector2(418.62133789062, -791.83923339844),
    vector2(432.30892944336, -797.05505371094),
    vector2(433.96087646484, -813.09991455078),
    vector2(440.67761230468, -835.02026367188),
    vector2(436.82360839844, -866.23193359375),
    vector2(416.28259277344, -867.2611694336),
    vector2(413.10977172852, -876.81964111328),
    vector2(488.2346496582, -874.1909790039)
  }, {
    name="MRPD",
    --minZ = 26.275276184082,
    --maxZ = 45.195304870606
        debugPoly = false
  })

local Cityhall = PolyZone:Create({
  vector2(-549.96508789062, -49.515167236328),
  vector2(-494.88790893554, -79.12890625),
  vector2(-472.30410766602, -95.282402038574),
  vector2(-451.66674804688, -118.75156402588),
  vector2(-407.70223999024, -195.08264160156),
  vector2(-372.15878295898, -179.70370483398),
  vector2(-323.51736450196, -203.46095275878),
  vector2(-371.32943725586, -248.53329467774),
  vector2(-310.69604492188, -291.14068603516),
  vector2(-290.79006958008, -332.07962036132),
  vector2(-322.00909423828, -367.29904174804),
  vector2(-450.37203979492, -293.0986328125),
  vector2(-417.84811401368, -369.45751953125),
  vector2(-512.84735107422, -360.97506713868),
  vector2(-598.08770751954, -361.6792602539),
  vector2(-634.2075805664, -320.12930297852),
  vector2(-664.80596923828, -265.77838134766),
  vector2(-685.50701904296, -226.9711151123),
  vector2(-703.16394042968, -204.77085876464),
  vector2(-663.18438720704, -180.8055114746),
  vector2(-646.50366210938, -167.34539794922),
  vector2(-698.00451660156, -87.975723266602),
  vector2(-704.27905273438, -67.044662475586),
  vector2(-672.89715576172, -48.225891113282),
  vector2(-636.767578125, -43.487567901612)
}, {
  name="Cityhall",
  --minZ = 46.775272369384,
  --maxZ = 54.815307617188
        debugPoly = false
  })

local MRPDbridge = PolyZone:Create({
    vector2(515.3544921875, -1021.0053710938),
    vector2(516.01373291016, -1050.0975341796),
    vector2(763.95288085938, -1020.4295654296),
    vector2(760.99188232422, -990.48071289062)
  }, {
    name="MRPDbridge",
    --minZ = 28.73098373413,
    --maxZ = 37.090965270996
    debugPoly = false
})

local Mechanic = PolyZone:Create({
    vector2(774.69647216796, -1106.2576904296),
    vector2(768.16174316406, -1024.8908691406),
    vector2(757.99920654296, -991.17358398438),
    vector2(703.42877197266, -991.74230957032),
    vector2(695.65692138672, -977.1298828125),
    vector2(739.36047363282, -976.42193603516),
    vector2(739.48498535156, -945.94128417968),
    vector2(763.23724365234, -944.49627685546),
    vector2(760.490234375, -889.0903930664),
    vector2(794.04626464844, -879.42932128906),
    vector2(799.80322265625, -933.92419433594),
    vector2(801.58630371094, -924.60455322266),
    vector2(846.4946899414, -922.85845947266),
    vector2(845.28356933594, -991.63684082032),
    vector2(974.2308959961, -984.2236328125),
    vector2(980.57739257812, -1008.2598876954),
    vector2(911.06884765625, -1010.9872436524),
    vector2(909.88427734375, -1035.9442138672),
    vector2(894.27081298828, -1028.9409179688),
    vector2(880.48022460938, -1016.5852661132),
    vector2(857.19146728516, -1017.0880737304),
    vector2(857.7177734375, -1041.538696289),
    vector2(835.623046875, -1040.9560546875),
    vector2(845.18737792968, -1041.7142333984),
    vector2(845.64251708984, -1049.0615234375),
    vector2(834.00323486328, -1094.2208251954),
    vector2(808.55303955078, -1096.5161132812)
  }, {
    name="Mechanic",
    --minZ = 26.671007156372,
    --maxZ = 45.71097946167
    debugPoly = false
  })

local Notary = PolyZone:Create({
    vector2(-185.13597106934, 130.07186889648),
    vector2(-215.62699890136, 109.88555145264),
    vector2(-208.98667907714, 91.78825378418),
    vector2(-131.44247436524, 52.000450134278),
    vector2(-134.7854309082, 38.173030853272),
    vector2(-129.90422058106, 36.640602111816),
    vector2(-119.5463180542, 37.721496582032),
    vector2(-120.74725341796, 26.287769317626),
    vector2(-102.15907287598, 19.048448562622),
    vector2(-100.12543487548, 24.261688232422),
    vector2(-90.296195983886, 19.998224258422),
    vector2(-93.766914367676, 15.201112747192),
    vector2(-86.309814453125, 12.348404884338),
    vector2(-86.349639892578, 19.050832748414),
    vector2(-61.87366104126, 24.392213821412),
    vector2(-76.971305847168, -56.722469329834),
    vector2(-52.225704193116, -63.328861236572),
    vector2(-30.554754257202, 8.3765363693238),
    vector2(-7.0002236366272, -5.2821593284606),
    vector2(23.154747009278, -11.451066970826),
    vector2(20.817733764648, -27.72840499878),
    vector2(36.663578033448, -44.517597198486),
    vector2(47.46227645874, -19.571968078614),
    vector2(131.21755981446, -53.03233718872),
    vector2(151.55757141114, -17.384984970092),
    vector2(86.839157104492, 27.69534111023),
    vector2(51.1955909729, 42.204219818116),
    vector2(36.443462371826, 72.915565490722),
    vector2(21.244173049926, 30.962297439576),
    vector2(-22.065591812134, 46.216930389404),
    vector2(-25.747659683228, 49.460567474366),
    vector2(-17.532970428466, 72.415061950684),
    vector2(-11.191712379456, 70.1064453125),
    vector2(-10.94048500061, 72.14437866211),
    vector2(-16.272081375122, 77.640617370606),
    vector2(2.4848704338074, 129.123046875),
    vector2(-26.298440933228, 136.07612609864),
    vector2(-49.954792022706, 93.415702819824),
    vector2(-80.663078308106, 104.0666809082),
    vector2(-86.80502319336, 108.73471069336),
    vector2(-102.527053833, 130.22285461426),
    vector2(-98.616966247558, 156.67764282226),
    vector2(-124.31743621826, 165.94555664062),
    vector2(-128.75221252442, 161.53286743164),
    vector2(-136.92111206054, 138.49621582032)
  }, {
    name="Notary",
    --minZ = 69.186798095704,
    --maxZ = 91.392951965332
    debugPoly = false
  })

local Hollywoodbvd = PolyZone:Create({
    vector2(416.8464050293, -157.52255249024),
    vector2(371.74194335938, -140.83015441894),
    vector2(354.16088867188, -94.252624511718),
    vector2(398.47424316406, -76.982124328614),
    vector2(412.03704833984, -51.617092132568),
    vector2(452.63562011718, 6.9366402626038),
    vector2(482.92712402344, 69.110000610352),
    vector2(435.23471069336, 75.360290527344),
    vector2(354.51815795898, 76.619049072266),
    vector2(329.34014892578, 79.534317016602),
    vector2(330.33276367188, 99.045677185058),
    vector2(254.11679077148, 130.0714416504),
    vector2(167.35565185546, 155.52647399902),
    vector2(128.41445922852, 166.240234375),
    vector2(104.650390625, 183.41439819336),
    vector2(30.516803741456, 203.46101379394),
    vector2(-2.0874207019806, 207.61656188964),
    vector2(-61.37084197998, 234.02336120606),
    vector2(-156.56553649902, 223.58456420898),
    vector2(-200.9659729004, 221.98565673828),
    vector2(-280.51068115234, 228.5203552246),
    vector2(-316.55560302734, 235.9363708496),
    vector2(-332.36361694336, 269.28936767578),
    vector2(-264.59735107422, 281.61584472656),
    vector2(-220.97018432618, 322.52514648438),
    vector2(-186.16761779786, 321.23748779296),
    vector2(-164.7310180664, 329.54321289062),
    vector2(-85.243309020996, 301.42669677734),
    vector2(11.179586410522, 277.4630432129),
    vector2(43.088153839112, 320.45489501954),
    vector2(78.83302307129, 301.99481201172),
    vector2(160.677734375, 246.10552978516),
    vector2(216.51416015625, 311.60357666016),
    vector2(260.7846069336, 320.00964355468),
    vector2(254.36416625976, 282.4299621582),
    vector2(257.75790405274, 273.83087158204),
    vector2(268.85299682618, 269.79904174804),
    vector2(301.48553466796, 257.4909362793),
    vector2(383.61181640625, 225.52600097656),
    vector2(521.95013427734, 184.20188903808),
    vector2(606.5473022461, 134.08534240722),
    vector2(654.51434326172, 127.14043426514),
    vector2(674.23327636718, 186.06855773926),
    vector2(754.41864013672, 160.1477508545),
    vector2(813.28430175782, 131.99462890625),
    vector2(786.50177001954, 88.459274291992),
    vector2(723.68798828125, 23.277420043946),
    vector2(760.98040771484, -10.661436080932),
    vector2(795.38092041016, -28.265647888184),
    vector2(781.61694335938, -66.453620910644),
    vector2(521.92645263672, -175.10470581054),
    vector2(487.611328125, -174.57830810546)
  }, {
    name="Hollywoodbvd",
    --minZ = 63.436748504638,
    --maxZ = 142.5573425293
    debugPoly = false
  })

local Casino = PolyZone:Create({
    vector2(1089.346069336, 345.95700073242),
    vector2(1029.2845458984, 383.47830200196),
    vector2(897.95629882812, 235.23509216308),
    vector2(821.2280883789, 216.9186706543),
    vector2(762.45568847656, 146.27142333984),
    vector2(685.87121582032, 49.72180557251),
    vector2(666.6255493164, -70.37403869629),
    vector2(758.83721923828, -125.5654220581),
    vector2(791.41101074218, -80.979469299316),
    vector2(817.83673095704, -95.813789367676),
    vector2(815.68762207032, -100.18265533448),
    vector2(818.9263305664, -100.603225708),
    vector2(843.72454833984, -109.38177490234),
    vector2(843.5396118164, -126.24096679688),
    vector2(857.81768798828, -137.6376953125),
    vector2(886.66430664062, -144.8348236084),
    vector2(877.28869628906, -166.50929260254),
    vector2(870.86962890625, -187.07637023926),
    vector2(877.46551513672, -201.77101135254),
    vector2(893.27508544922, -229.81056213378),
    vector2(882.93975830078, -244.78187561036),
    vector2(903.06506347656, -275.37301635742),
    vector2(935.78100585938, -261.28897094726),
    vector2(914.626953125, -241.11238098144),
    vector2(947.47424316406, -180.73585510254),
    vector2(1001.3638916016, -201.3638458252),
    vector2(1025.3116455078, -183.13059997558),
    vector2(929.38287353516, -125.45182800292),
    vector2(943.36822509766, -99.2562789917),
    vector2(973.77264404296, -79.503623962402),
    vector2(1006.8768920898, -98.079681396484),
    vector2(1053.8299560546, -106.32582092286),
    vector2(1088.807006836, -101.26892852784),
    vector2(1212.709350586, 87.848983764648),
    vector2(1279.1887207032, 195.60502624512),
    vector2(1287.1661376954, 253.84214782714),
    vector2(1270.1770019532, 282.63418579102),
    vector2(1220.8566894532, 322.12048339844),
    vector2(1182.0344238282, 327.73013305664)
  }, {
    name="Casino",
    --minZ = 94.677444458008,
    --maxZ = 120.43739318848
    debugPoly = false
  })

local Prison = PolyZone:Create({
    vector2(1755.651977539, 2064.4860839844),
    vector2(1755.375366211, 2132.1455078125),
    vector2(1762.2319335938, 2180.1696777344),
    vector2(1753.9854736328, 2211.2817382812),
    vector2(1712.6169433594, 2203.8525390625),
    vector2(1636.4091796875, 2213.4328613282),
    vector2(1610.719116211, 2248.8266601562),
    vector2(1524.3646240234, 2264.6713867188),
    vector2(1460.3581542968, 2276.625),
    vector2(1405.8028564454, 2320.5922851562),
    vector2(1342.0083007812, 2368.7788085938),
    vector2(1314.0498046875, 2425.1604003906),
    vector2(1285.3081054688, 2488.3916015625),
    vector2(1283.8620605468, 2590.1809082032),
    vector2(1316.3210449218, 2665.451171875),
    vector2(1334.998413086, 2699.2409667968),
    vector2(1347.2456054688, 2781.853515625),
    vector2(1403.248413086, 2812.5263671875),
    vector2(1465.0655517578, 2852.1391601562),
    vector2(1560.5887451172, 2885.4670410156),
    vector2(1565.3740234375, 2914.2194824218),
    vector2(1625.1776123046, 2961.4108886718),
    vector2(1697.7196044922, 2985.8862304688),
    vector2(1775.9829101562, 3027.7092285156),
    vector2(1842.3944091796, 3042.0170898438),
    vector2(1907.9774169922, 2988.126953125),
    vector2(1977.6037597656, 2962.6716308594),
    vector2(2054.1547851562, 2923.6767578125),
    vector2(2211.3415527344, 2784.0354003906),
    vector2(2235.4770507812, 2726.298828125),
    vector2(2169.2407226562, 2636.9321289062),
    vector2(2104.04296875, 2522.9262695312),
    vector2(2091.7724609375, 2470.4748535156),
    vector2(2054.5998535156, 2401.0109863282),
    vector2(1987.1729736328, 2196.2709960938),
    vector2(1958.0740966796, 2093.609375)
  }, {
    name="Prison",
    --minZ = 42.97151184082,
    --maxZ = 108.89251708984
    debugPoly = false
  })

local SandyPD = PolyZone:Create({
    vector2(1802.6048583984, 3797.8579101562),
    vector2(1832.8010253906, 3820.333984375),
    vector2(1844.2723388672, 3790.7795410156),
    vector2(1849.4777832032, 3778.4382324218),
    vector2(1857.4903564454, 3757.5317382812),
    vector2(1930.0847167968, 3783.1594238282),
    vector2(2031.5598144532, 3834.5368652344),
    vector2(2043.4302978516, 3825.8989257812),
    vector2(2036.0427246094, 3808.3005371094),
    vector2(2067.1462402344, 3777.7414550782),
    vector2(2075.0869140625, 3735.3979492188),
    vector2(2065.9345703125, 3709.123046875),
    vector2(2019.6668701172, 3680.7927246094),
    vector2(1989.0808105468, 3613.2551269532),
    vector2(1782.8742675782, 3500.8217773438),
    vector2(1740.4576416016, 3544.7453613282),
    vector2(1681.9848632812, 3643.9755859375),
    vector2(1701.3920898438, 3683.6098632812),
    vector2(1741.5681152344, 3702.2507324218),
    vector2(1701.7854003906, 3738.7236328125)
  }, {
    name="SandyPD",
    --minZ = 36.832424163818,
    --maxZ = 53.652404785156
    debugPoly = false
  })

local PaletoPD = PolyZone:Create({
    vector2(-552.38635253906, 6021.0209960938),
    vector2(-547.7515258789, 5959.9501953125),
    vector2(-503.35455322266, 5894.5),
    vector2(-487.7085571289, 5872.96484375),
    vector2(-485.29217529296, 5825.8227539062),
    vector2(-387.1139831543, 5851.642578125),
    vector2(-364.8462524414, 5889.2724609375),
    vector2(-324.65658569336, 5970.3784179688),
    vector2(-292.73165893554, 6066.3500976562),
    vector2(-306.38735961914, 6084.6357421875),
    vector2(-368.26327514648, 6032.2719726562),
    vector2(-389.18490600586, 6049.1455078125),
    vector2(-365.13201904296, 6065.9555664062),
    vector2(-341.9398803711, 6076.26953125),
    vector2(-361.9423828125, 6100.3627929688),
    vector2(-391.02670288086, 6073.2705078125),
    vector2(-401.28909301758, 6060.544921875),
    vector2(-415.33081054688, 6071.9038085938),
    vector2(-399.13555908204, 6099.2158203125),
    vector2(-352.11083984375, 6154.4033203125),
    vector2(-380.60852050782, 6172.1015625),
    vector2(-417.68182373046, 6135.9013671875),
    vector2(-436.64526367188, 6157.6767578125)
  }, {
    name="PaletoPD",
    --minZ = 37.492401123046,
    --maxZ = 58.132381439208
    debugPoly = false
  })

local PaletoHospital = PolyZone:Create({
    vector2(-335.17642211914, 6344.0190429688),
    vector2(-293.95642089844, 6383.5009765625),
    vector2(-239.08961486816, 6411.34765625),
    vector2(-225.05529785156, 6390.642578125),
    vector2(-250.98835754394, 6370.341796875),
    vector2(-206.8016204834, 6349.1459960938),
    vector2(-168.74641418458, 6384.0600585938),
    vector2(-123.44564819336, 6345.751953125),
    vector2(-92.269241333008, 6372.9580078125),
    vector2(-22.003158569336, 6398.421875),
    vector2(57.594844818116, 6478.0927734375),
    vector2(103.03164672852, 6460.1547851562),
    vector2(89.482704162598, 6433.4418945312),
    vector2(155.6300201416, 6391.5126953125),
    vector2(150.58848571778, 6357.0185546875),
    vector2(130.83215332032, 6344.9716796875),
    vector2(73.352661132812, 6304.5063476562),
    vector2(54.563026428222, 6338.4311523438),
    vector2(-19.879121780396, 6294.6518554688),
    vector2(10.282658576966, 6266.0834960938),
    vector2(14.250905036926, 6245.044921875),
    vector2(2.355030298233, 6223.8525390625),
    vector2(-48.554862976074, 6191.1079101562),
    vector2(-129.9302368164, 6120.2119140625),
    vector2(-169.60981750488, 6093.466796875),
    vector2(-187.41348266602, 6105.5922851562),
    vector2(-214.97134399414, 6140.431640625),
    vector2(-227.80857849122, 6171.08203125),
    vector2(-138.23965454102, 6262.1616210938),
    vector2(-148.89245605468, 6272.6225585938),
    vector2(-180.1868133545, 6272.634765625),
    vector2(-228.91738891602, 6217.1596679688),
    vector2(-243.68640136718, 6220.1791992188),
    vector2(-265.84616088868, 6249.1293945312),
    vector2(-304.96798706054, 6214.333984375),
    vector2(-319.32946777344, 6233.2509765625),
    vector2(-275.43075561524, 6281.6743164062),
    vector2(-287.51083374024, 6294.8930664062),
    vector2(-310.0046081543, 6293.8505859375)
  }, {
    name="PaletoHospital",
    --minZ = 32.472396850586,
    --maxZ = 65.032424926758
    debugPoly = false
  })

local PaletoGas = PolyZone:Create({
    vector2(39.939029693604, 6630.7080078125),
    vector2(51.987083435058, 6602.7294921875),
    vector2(67.493591308594, 6590.87890625),
    vector2(77.111846923828, 6595.09375),
    vector2(132.36547851562, 6539.4658203125),
    vector2(120.77397155762, 6518.6655273438),
    vector2(127.22761535644, 6479.5659179688),
    vector2(158.61492919922, 6465.1103515625),
    vector2(190.5795135498, 6480.376953125),
    vector2(231.16905212402, 6526.7236328125),
    vector2(331.50103759766, 6543.5478515625),
    vector2(330.16036987304, 6586.7021484375),
    vector2(306.49133300782, 6591.720703125),
    vector2(305.93789672852, 6669.912109375),
    vector2(217.39762878418, 6690.9184570312),
    vector2(161.31034851074, 6690.85546875),
    vector2(100.65370178222, 6701.8330078125),
    vector2(82.781730651856, 6654.6787109375),
    vector2(80.239837646484, 6642.2080078125),
    vector2(64.75001525879, 6646.3666992188)
  }, {
    name="PaletoGas",
    --minZ = 33.552391052246,
    --maxZ = 62.39241027832
    debugPoly = false
  })

local MilitaryBase = PolyZone:Create({
    vector2(-2494.9357910156, 3972.4128417968),
    vector2(-2628.7331542968, 3836.197265625),
    vector2(-2774.4211425782, 3609.0131835938),
    vector2(-3151.9204101562, 3574.455078125),
    vector2(-3278.0737304688, 3418.9479980468),
    vector2(-3307.9819335938, 3265.0847167968),
    vector2(-3212.1547851562, 3065.380859375),
    vector2(-3048.6433105468, 2894.8566894532),
    vector2(-2849.1315917968, 2730.1166992188),
    vector2(-2602.8059082032, 2483.5810546875),
    vector2(-2127.1669921875, 2370.5578613282),
    vector2(-1771.6789550782, 2454.6545410156),
    vector2(-1383.2357177734, 2481.2980957032),
    vector2(-1145.7772216796, 2580.2082519532),
    vector2(-1352.661743164, 2845.3359375),
    vector2(-1358.853149414, 3485.4909667968),
    vector2(-1238.7661132812, 3733.5922851562),
    vector2(-1548.616821289, 3924.4187011718),
    vector2(-1832.4418945312, 4011.7075195312),
    vector2(-1938.3188476562, 3904.6086425782),
    vector2(-1977.8303222656, 3823.4538574218),
    vector2(-2130.673828125, 3852.9946289062)
  }, {
    name="MilitaryBase",
    --minZ = 13.312395095826,
    --maxZ = 454.65142822266
    debugPoly = false
  })

local Airport = PolyZone:Create({
    vector2(-1335.632446289, -2022.488647461),
    vector2(-1668.6767578125, -2240.7885742188),
    vector2(-1929.3289794922, -2555.29296875),
    vector2(-2181.7670898438, -2959.296875),
    vector2(-2275.7102050782, -3272.8544921875),
    vector2(-2115.9477539062, -3517.4138183594),
    vector2(-1799.833984375, -3666.2629394532),
    vector2(-1444.287109375, -3847.849609375),
    vector2(-1107.1063232422, -4000.68359375),
    vector2(-778.63256835938, -4125.3706054688),
    vector2(-457.7442932129, -4051.3249511718),
    vector2(-204.49642944336, -3906.3427734375),
    vector2(-31.334188461304, -3554.7805175782),
    vector2(-504.11322021484, -2916.0849609375),
    vector2(-563.52941894532, -2818.2561035156),
    vector2(-504.73837280274, -2671.8454589844)
  }, {
    name="Airport",
    --minZ = 20.142433166504,
    --maxZ = 97.042198181152
    debugPoly = false
  })

local FleekaW = PolyZone:Create({
    vector2(-3013.6188964844, 225.99215698242),
    vector2(-3057.7443847656, 244.88694763184),
    vector2(-3052.2836914062, 290.23315429688),
    vector2(-3047.8715820312, 366.39694213868),
    vector2(-3012.5146484375, 492.24340820312),
    vector2(-3023.4836425782, 536.47833251954),
    vector2(-3029.1665039062, 563.40173339844),
    vector2(-3054.5107421875, 565.53997802734),
    vector2(-3060.6257324218, 590.50939941406),
    vector2(-3061.7739257812, 610.95910644532),
    vector2(-3026.5100097656, 643.51202392578),
    vector2(-3015.8010253906, 634.73504638672),
    vector2(-3008.9868164062, 609.11834716796),
    vector2(-2939.3444824218, 555.19274902344),
    vector2(-2913.3220214844, 518.20959472656),
    vector2(-2909.7238769532, 456.07928466796),
    vector2(-2908.4609375, 404.13818359375),
    vector2(-2932.0402832032, 341.51516723632),
    vector2(-2961.607421875, 285.62631225586)
  }, {
    name="FleekaW",
    --minZ = 12.267492294312,
    --maxZ = 48.947467803956
    debugPoly = false
  })

local GasStationY = PolyZone:Create({
    vector2(-2042.1358642578, -295.50967407226),
    vector2(-2030.9125976562, -262.5304260254),
    vector2(-2126.5551757812, -180.77760314942),
    vector2(-2155.2600097656, -171.16928100586),
    vector2(-2184.0673828125, -192.9828491211),
    vector2(-2226.9196777344, -313.6321105957),
    vector2(-2225.6921386718, -361.62857055664),
    vector2(-2194.4699707032, -409.54806518554),
    vector2(-2143.2961425782, -435.34063720704),
    vector2(-2079.2817382812, -450.06045532226),
    vector2(-2047.4506835938, -360.13107299804),
    vector2(-2032.4086914062, -302.34188842774)
  }, {
    name="GasStationY",
    --minZ = 13.647512435914,
    --maxZ = 61.027423858642
    debugPoly = false
  })

local Manege = PolyZone:Create({
    vector2(-1632.2384033204, -796.45263671875),
    vector2(-1648.359008789, -815.53509521484),
    vector2(-1729.2302246094, -745.47137451172),
    vector2(-1710.3768310546, -722.62017822266),
    vector2(-1732.4748535156, -703.359375),
    vector2(-1750.3927001954, -725.65802001954),
    vector2(-1796.3983154296, -685.9008178711),
    vector2(-1882.3135986328, -712.79656982422),
    vector2(-1932.4036865234, -742.21435546875),
    vector2(-2135.9050292968, -922.27648925782),
    vector2(-2175.6630859375, -981.9398803711),
    vector2(-2128.2431640625, -998.12573242188),
    vector2(-2076.3161621094, -1011.9260253906),
    vector2(-2018.5224609375, -1030.918334961),
    vector2(-2014.9389648438, -1034.587890625),
    vector2(-2018.5390625, -1046.0614013672),
    vector2(-2047.8176269532, -1118.1813964844),
    vector2(-2051.4191894532, -1175.1602783204),
    vector2(-1987.553100586, -1249.5219726562),
    vector2(-1937.6459960938, -1301.3129882812),
    vector2(-1856.0770263672, -1388.7873535156),
    vector2(-1781.2330322266, -1379.1499023438),
    vector2(-1721.7744140625, -1375.3189697266),
    vector2(-1553.4599609375, -1295.6127929688),
    vector2(-1449.4753417968, -1239.0584716796),
    vector2(-1355.7631835938, -1175.0867919922),
    vector2(-1357.002319336, -1107.8864746094),
    vector2(-1421.6926269532, -1012.6556396484),
    vector2(-1595.013305664, -846.5132446289),
    vector2(-1627.5416259766, -814.0112915039),
    vector2(-1612.6274414062, -804.20733642578)
  }, {
    name="Manege",
    --minZ = 10.307437896728,
    --maxZ = 32.347427368164
    debugPoly = false
  })

local Cardealer = PolyZone:Create({
    vector2(-125.90788269042, -1117.3409423828),
    vector2(-181.87423706054, -1123.6622314454),
    vector2(-205.30836486816, -1122.5012207032),
    vector2(-195.6587524414, -1100.7492675782),
    vector2(-210.36120605468, -1088.6263427734),
    vector2(-231.99983215332, -1120.927734375),
    vector2(-252.8273010254, -1120.3146972656),
    vector2(-261.96731567382, -1159.6359863282),
    vector2(-247.2498474121, -1208.0229492188),
    vector2(-209.37391662598, -1209.0053710938),
    vector2(-169.92022705078, -1211.196899414),
    vector2(-142.92323303222, -1208.0668945312),
    vector2(-85.509422302246, -1206.8411865234),
    vector2(-82.58177947998, -1175.5447998046),
    vector2(-14.515783309936, -1161.6223144532),
    vector2(43.026988983154, -1154.2719726562),
    vector2(81.521713256836, -1118.1926269532)
  }, {
    name="Cardealer",
    --minZ = 24.762435913086,
    --maxZ = 32.282428741456
    debugPoly = false
  })

local University = PolyZone:Create({
    vector2(959.29290771484, 531.35070800782),
    vector2(952.7026977539, 505.96752929688),
    vector2(923.84204101562, 504.29766845704),
    vector2(855.35595703125, 456.94927978516),
    vector2(812.98010253906, 464.66680908204),
    vector2(761.384765625, 447.50253295898),
    vector2(740.85229492188, 429.5124206543),
    vector2(685.67614746094, 410.75595092774),
    vector2(590.3890991211, 421.33270263672),
    vector2(566.12628173828, 421.24584960938),
    vector2(527.48120117188, 464.33096313476),
    vector2(490.84732055664, 529.31829833984),
    vector2(472.0715637207, 570.08422851562),
    vector2(469.23815917968, 615.7431640625),
    vector2(476.33422851562, 658.35913085938),
    vector2(493.64862060546, 693.81567382812),
    vector2(507.33618164062, 734.72332763672),
    vector2(522.15625, 758.51971435546),
    vector2(571.5542602539, 752.40606689454),
    vector2(598.04260253906, 749.05908203125),
    vector2(642.64245605468, 746.5771484375),
    vector2(685.05401611328, 751.74841308594),
    vector2(755.39721679688, 742.14770507812),
    vector2(775.02069091796, 691.29553222656),
    vector2(842.17236328125, 633.87756347656)
  }, {
    name="University",
    --minZ = 115.8664855957,
    --maxZ = 202.9084777832
    debugPoly = false
  })

local FleekaPillbox = PolyZone:Create({
    vector2(317.54815673828, -325.60287475586),
    vector2(345.8663635254, -335.70852661132),
    vector2(426.97775268554, -281.8331604004),
    vector2(400.21731567382, -213.23751831054),
    vector2(409.15435791016, -191.12365722656),
    vector2(357.10537719726, -197.56729125976),
    vector2(311.69766235352, -191.62213134766),
    vector2(293.8996887207, -223.72302246094),
    vector2(249.13305664062, -208.4239807129),
    vector2(232.43458557128, -248.6411743164)
  }, {
    name="FleekaPillbox",
    --minZ = 55.747566223144,
    --maxZ = 64.227561950684
    debugPoly = false
  })

local StoreChang = PolyZone:Create({
    vector2(-696.6732788086, -907.68591308594),
    vector2(-694.80090332032, -947.01068115234),
    vector2(-678.00311279296, -967.02087402344),
    vector2(-696.90985107422, -989.21087646484),
    vector2(-767.91943359375, -983.25775146484),
    vector2(-792.49768066406, -954.97326660156),
    vector2(-792.60290527344, -924.58154296875),
    vector2(-753.73803710938, -896.02276611328)
  }, {
    name="Store chang",
    --minZ = 17.75587463379,
    --maxZ = 26.395866394042
    debugPoly = false
  })

local VespucciPD = PolyZone:Create({
    vector2(-1039.5357666016, -657.72650146484),
    vector2(-979.17486572266, -701.53063964844),
    vector2(-1033.3582763672, -756.96350097656),
    vector2(-870.16125488282, -802.20989990234),
    vector2(-861.55560302734, -913.56170654296),
    vector2(-889.97314453125, -930.63879394532),
    vector2(-949.9486694336, -874.9296875),
    vector2(-977.39715576172, -855.09259033204),
    vector2(-1019.3029785156, -886.8871459961),
    vector2(-1007.7595825196, -906.74200439454),
    vector2(-1010.1365356446, -907.31555175782),
    vector2(-1078.2883300782, -947.77020263672),
    vector2(-1108.6704101562, -904.58319091796),
    vector2(-1156.8658447266, -937.90728759766),
    vector2(-1207.4893798828, -912.51727294922),
    vector2(-1285.4959716796, -941.61206054688),
    vector2(-1332.283203125, -885.97039794922),
    vector2(-1281.1643066406, -879.47747802734),
    vector2(-1265.1190185546, -858.64562988282),
    vector2(-1283.988647461, -839.49548339844),
    vector2(-1268.004272461, -830.64294433594),
    vector2(-1218.7331542968, -812.4638671875),
    vector2(-1299.779296875, -707.8217163086),
    vector2(-1284.1528320312, -680.45672607422),
    vector2(-1217.1171875, -708.15771484375),
    vector2(-1170.4754638672, -806.9077758789),
    vector2(-1137.3507080078, -782.88391113282),
    vector2(-1157.171508789, -751.35943603516),
    vector2(-1172.955444336, -760.8076171875),
    vector2(-1182.1083984375, -754.47149658204),
    vector2(-1200.3006591796, -741.79803466796),
    vector2(-1208.1372070312, -706.30206298828),
    vector2(-1265.318725586, -637.96942138672),
    vector2(-1230.9790039062, -607.85711669922),
    vector2(-1195.4384765625, -594.89862060546),
    vector2(-1159.7156982422, -642.52404785156),
    vector2(-1126.3859863282, -678.39306640625)
  }, {
    name="VespucciPD",
    --minZ = 3.6676173210144,
    --maxZ = 43.887580871582
    debugPoly = false
  })

local Timber = PolyZone:Create({
    vector2(-427.50360107422, 5485.8212890625),
    vector2(-405.5304260254, 5433.9208984375),
    vector2(-408.5532836914, 5356.7905273438),
    vector2(-405.66104125976, 5281.2041015625),
    vector2(-436.54623413086, 5220.6923828125),
    vector2(-487.64526367188, 5146.53515625),
    vector2(-524.50866699218, 5103.8486328125),
    vector2(-594.57403564454, 5125.146484375),
    vector2(-680.48657226562, 5164.1127929688),
    vector2(-757.93280029296, 5240.7260742188),
    vector2(-804.49432373046, 5322.8100585938),
    vector2(-927.08935546875, 5386.4599609375),
    vector2(-951.86975097656, 5422.0131835938),
    vector2(-864.87426757812, 5454.373046875),
    vector2(-731.65710449218, 5502.140625),
    vector2(-597.771484375, 5576.4365234375)
  }, {
    name="Timber",
    --minZ = 59.161163330078,
    --maxZ = 128.62103271484
    debugPoly = false
  })

local StoreHunting = PolyZone:Create({
    vector2(-618.63897705078, 5801.279296875),
    vector2(-613.29205322266, 5770.1162109375),
    vector2(-618.35382080078, 5748.0634765625),
    vector2(-644.61267089844, 5739.6284179688),
    vector2(-666.90161132812, 5739.3266601562),
    vector2(-714.94415283204, 5742.9731445312),
    vector2(-750.13684082032, 5764.8203125),
    vector2(-755.12585449218, 5803.2421875),
    vector2(-753.39465332032, 5831.5927734375),
    vector2(-742.55499267578, 5871.2612304688),
    vector2(-726.94689941406, 5897.8178710938),
    vector2(-679.2407836914, 5902.9809570312),
    vector2(-637.74127197266, 5856.6123046875)
  }, {
    name="StoreHunting",
    --minZ = 26.379917144776,
    --maxZ = 34.689865112304
    debugPoly = false
  })

local BaseDRS = PolyZone:Create({
    vector2(2504.5866699218, -627.66333007812),
    vector2(2468.4089355468, -664.11517333984),
    vector2(2474.6096191406, -701.12756347656),
    vector2(2558.0993652344, -667.59045410156),
    vector2(2604.5512695312, -606.08459472656),
    vector2(2634.4633789062, -568.5278930664),
    vector2(2674.6474609375, -493.31286621094),
    vector2(2676.4440917968, -425.2310180664),
    vector2(2685.6179199218, -316.5655822754),
    vector2(2642.9265136718, -293.08401489258),
    vector2(2653.904296875, -246.6488494873),
    vector2(2570.513671875, -234.90866088868),
    vector2(2543.7404785156, -231.67082214356),
    vector2(2523.353515625, -224.2106628418),
    vector2(2498.203125, -222.91027832032),
    vector2(2389.9479980468, -205.50204467774),
    vector2(2327.3713378906, -258.62033081054),
    vector2(2318.9924316406, -300.62316894532),
    vector2(2351.6379394532, -304.9620666504),
    vector2(2329.6940917968, -483.36471557618),
    vector2(2361.0717773438, -587.29174804688)
  }, {
    name="BaseDRS",
    --minZ = 74.06997680664,
    --maxZ = 125.75115966796
    debugPoly = false
  })

local StoreNorthRockford = PolyZone:Create({
    vector2(-1675.060180664, 867.08294677734),
    vector2(-1706.0002441406, 822.21936035156),
    vector2(-1761.6166992188, 771.23162841796),
    vector2(-1820.595703125, 734.46936035156),
    vector2(-1867.2454833984, 712.40008544922),
    vector2(-1882.5651855468, 728.0160522461),
    vector2(-1874.7934570312, 761.3046875),
    vector2(-1884.3104248046, 780.82299804688),
    vector2(-1840.6245117188, 821.8812866211),
    vector2(-1795.8405761718, 845.13220214844),
    vector2(-1736.1580810546, 888.74615478516)
  }, {
    name="store northrockford ",
    --minZ = 131.75189208984,
    --maxZ = 169.03274536132
    debugPoly = false
  })

local StoreMirrorpark = PolyZone:Create({
    vector2(1295.2741699218, -281.55102539062),
    vector2(1273.8592529296, -262.509765625),
    vector2(1163.8192138672, -235.22758483886),
    vector2(1132.9470214844, -233.89448547364),
    vector2(1121.6489257812, -271.47457885742),
    vector2(1125.3850097656, -307.72174072266),
    vector2(1102.5474853516, -327.59051513672),
    vector2(1129.3524169922, -364.58651733398),
    vector2(1131.023071289, -398.55114746094),
    vector2(1127.8426513672, -413.15078735352),
    vector2(1154.1013183594, -425.63217163086),
    vector2(1177.2852783204, -432.21255493164),
    vector2(1210.0219726562, -438.35009765625),
    vector2(1239.1088867188, -444.49462890625),
    vector2(1250.5859375, -412.02145385742),
    vector2(1289.75390625, -375.0308227539)
  }, {
    name="store mirrorpark",
    --minZ = 67.132698059082,
    --maxZ = 90.592651367188
    debugPoly = false
  })

-- local StoreVespucci = PolyZone:Create({
--     vector2(1248.480102539, -1045.9545898438),
--     vector2(1166.6826171875, -1076.8422851562),
--     vector2(1142.4543457032, -1017.5886230468),
--     vector2(1117.5930175782, -1016.7314453125),
--     vector2(1105.2579345704, -1001.1679077148),
--     vector2(1097.0805664062, -984.58874511718),
--     vector2(1093.4990234375, -955.44641113282),
--     vector2(1116.4930419922, -932.75799560546),
--     vector2(1149.9422607422, -919.69049072266),
--     vector2(1183.5770263672, -923.87878417968),
--     vector2(1208.4696044922, -970.47088623046)
--   }, {
--     name="store vespucci",
--     --minZ = 45.272724151612,
--     --maxZ = 60.932754516602
--     debugPoly = false
--   })

local Bahamas = PolyZone:Create({
    vector2(-1449.260131836, -625.42022705078),
    vector2(-1511.2330322266, -666.02716064454),
    vector2(-1544.8397216796, -637.57641601562),
    vector2(-1504.18359375, -610.29327392578),
    vector2(-1477.5899658204, -578.41931152344),
    vector2(-1483.8582763672, -569.16967773438),
    vector2(-1472.1455078125, -561.52270507812),
    vector2(-1454.857788086, -572.662109375),
    vector2(-1445.1907958984, -548.35144042968),
    vector2(-1447.6080322266, -507.47973632812),
    vector2(-1461.4993896484, -478.64532470704),
    vector2(-1437.4102783204, -441.5336303711),
    vector2(-1411.3438720704, -485.2596130371),
    vector2(-1329.6779785156, -501.54977416992),
    vector2(-1299.3325195312, -476.91674804688),
    vector2(-1274.3583984375, -504.39114379882),
    vector2(-1311.252319336, -535.0517578125),
    vector2(-1356.1513671875, -567.77032470704),
    vector2(-1321.049194336, -623.57470703125),
    vector2(-1334.6486816406, -657.59130859375),
    vector2(-1368.101928711, -646.93328857422),
    vector2(-1375.5389404296, -634.76989746094),
    vector2(-1385.2440185546, -650.16973876954),
    vector2(-1398.0208740234, -666.3013305664),
    vector2(-1424.4184570312, -666.65594482422),
    vector2(-1432.5578613282, -659.11749267578),
    vector2(-1439.1633300782, -655.04113769532),
    vector2(-1434.7667236328, -646.3110961914)
  }, {
    name="Bahamas",
    --minZ = 31.670467376708,
    --maxZ = 55.530475616456
    debugPoly = false
  })

local Weazle = PolyZone:Create({
    vector2(-518.46398925782, -876.54107666016),
    vector2(-485.75869750976, -885.34075927734),
    vector2(-513.19635009766, -939.06066894532),
    vector2(-523.92553710938, -986.49462890625),
    vector2(-555.7265625, -995.45281982422),
    vector2(-604.20233154296, -1013.4684448242),
    vector2(-668.42797851562, -1021.387084961),
    vector2(-661.21856689454, -976.1591796875),
    vector2(-655.83251953125, -944.88098144532),
    vector2(-653.9873046875, -890.71002197266),
    vector2(-654.72833251954, -854.72216796875)
  }, {
    name="Weazle",
    --minZ = 28.24573135376,
    --maxZ = 38.34571838379
    debugPoly = false
  })

local StorePacificbank = PolyZone:Create({
    vector2(500.39389038086, 279.4370727539),
    vector2(478.03713989258, 258.10623168946),
    vector2(459.4853515625, 209.9878692627),
    vector2(427.92294311524, 220.73905944824),
    vector2(405.9079284668, 221.9712677002),
    vector2(381.53945922852, 228.10479736328),
    vector2(387.2105102539, 250.59048461914),
    vector2(366.60665893554, 257.80807495118),
    vector2(352.80264282226, 269.8130493164),
    vector2(358.86093139648, 302.50537109375),
    vector2(358.44714355468, 307.03527832032),
    vector2(322.34460449218, 313.42779541016),
    vector2(295.04165649414, 318.50424194336),
    vector2(273.05340576172, 324.19192504882),
    vector2(273.84579467774, 344.646484375),
    vector2(283.03768920898, 344.2626953125),
    vector2(330.1121520996, 333.46200561524),
    vector2(346.88311767578, 329.4769897461),
    vector2(357.24688720704, 359.70806884766),
    vector2(362.04876708984, 365.84744262696),
    vector2(411.99642944336, 353.82653808594),
    vector2(422.05770874024, 328.62237548828),
    vector2(422.42846679688, 314.88302612304)
  }, {
    name="store pacificbank",
    --minZ = 105.35252380372,
    --maxZ = 112.71250915528
    debugPoly = false
  })

local HardwareStore = PolyZone:Create({
    vector2(62.616668701172, -1643.1600341796),
    vector2(82.138977050782, -1674.4020996094),
    vector2(145.70275878906, -1734.257446289),
    vector2(179.53103637696, -1762.7655029296),
    vector2(166.16310119628, -1793.5405273438),
    vector2(131.07911682128, -1831.0932617188),
    vector2(111.33157348632, -1811.7237548828),
    vector2(76.618812561036, -1845.0274658204),
    vector2(33.904609680176, -1815.870727539),
    vector2(-14.950366020202, -1792.2524414062),
    vector2(-9.5426292419434, -1781.2390136718),
    vector2(-32.057636260986, -1760.3348388672),
    vector2(-39.53190612793, -1756.0926513672),
    vector2(-61.039093017578, -1783.0662841796),
    vector2(-50.844108581542, -1811.6085205078),
    vector2(-108.85160064698, -1774.3654785156),
    vector2(-123.32595825196, -1765.471069336),
    vector2(-155.06446838378, -1759.574584961),
    vector2(-123.87648010254, -1736.9322509766),
    vector2(-68.07942199707, -1680.4678955078)
  }, {
    name="hardware store",
    --minZ = 27.192691802978,
    --maxZ = 32.71268081665
    debugPoly = false
  })

local DavisPD = PolyZone:Create({
    vector2(379.6967163086, -1768.4659423828),
    vector2(350.3995666504, -1731.9450683594),
    vector2(308.19149780274, -1694.798828125),
    vector2(254.09686279296, -1657.8504638672),
    vector2(278.49697875976, -1626.2315673828),
    vector2(226.57775878906, -1577.59765625),
    vector2(271.63064575196, -1546.1264648438),
    vector2(313.99450683594, -1520.9462890625),
    vector2(340.72924804688, -1505.0885009766),
    vector2(391.39453125, -1546.340209961),
    vector2(436.43963623046, -1587.2431640625),
    vector2(468.68814086914, -1613.197631836),
    vector2(478.38952636718, -1655.017211914)
  }, {
    name="davis departement",
    --minZ = 29.492687225342,
    --maxZ = 37.312671661376
    debugPoly = false
  })

local BahamasGasStation = PolyZone:Create({
    vector2(-1405.8084716796, -371.45587158204),
    vector2(-1412.503540039, -379.26544189454),
    vector2(-1433.1511230468, -361.71258544922),
    vector2(-1450.9373779296, -340.06143188476),
    vector2(-1480.4835205078, -304.38925170898),
    vector2(-1510.2755126954, -274.48742675782),
    vector2(-1515.4952392578, -248.31077575684),
    vector2(-1504.6711425782, -230.96687316894),
    vector2(-1487.3111572266, -232.8533630371),
    vector2(-1450.23828125, -192.60842895508),
    vector2(-1436.1873779296, -170.17404174804),
    vector2(-1434.444946289, -136.36981201172),
    vector2(-1410.9895019532, -146.99530029296),
    vector2(-1388.409790039, -148.79106140136),
    vector2(-1382.1586914062, -187.73078918458),
    vector2(-1359.8331298828, -223.40550231934),
    vector2(-1342.9034423828, -251.17231750488),
    vector2(-1364.9758300782, -273.2025756836),
    vector2(-1413.2794189454, -316.9722290039),
    vector2(-1380.7922363282, -363.2123413086),
    vector2(-1384.0164794922, -363.60729980468)
  }, {
    name="BahamasGasStation",
    --minZ = 37.039379119874,
    --maxZ = 53.51936340332
    debugPoly = false
  })

local SandyBou3lem = PolyZone:Create({
    vector2(1231.2935791016, 2628.1784667968),
    vector2(1185.5826416016, 2597.2145996094),
    vector2(1124.698852539, 2598.3806152344),
    vector2(1095.5498046875, 2598.1254882812),
    vector2(1051.2637939454, 2625.083984375),
    vector2(1056.587890625, 2675.013671875),
    vector2(1073.4520263672, 2715.2648925782),
    vector2(1113.1302490234, 2729.2880859375),
    vector2(1141.8984375, 2732.9267578125),
    vector2(1184.298828125, 2732.8759765625),
    vector2(1228.9798583984, 2727.1237792968),
    vector2(1264.480102539, 2705.9797363282),
    vector2(1257.9643554688, 2661.4338378906)
  }, {
    name="Bou3lem",
    --minZ = 42.974647521972,
    --maxZ = 60.99467086792
    debugPoly = false
  })

local HuntingStore = PolyZone:Create({
    vector2(693.77270507812, 2672.2177734375),
    vector2(642.98388671875, 2657.4387207032),
    vector2(569.52868652344, 2654.5173339844),
    vector2(519.90759277344, 2661.2607421875),
    vector2(481.72091674804, 2679.6533203125),
    vector2(476.62872314454, 2739.9887695312),
    vector2(501.96438598632, 2773.2353515625),
    vector2(525.08099365234, 2800.7573242188),
    vector2(563.03918457032, 2819.0678710938),
    vector2(629.12194824218, 2823.7797851562),
    vector2(647.51531982422, 2821.3752441406),
    vector2(697.48992919922, 2767.6813964844),
    vector2(717.65411376954, 2719.0930175782),
    vector2(723.8355102539, 2685.2866210938)
  }, {
    name="Hunting",
    --minZ = 48.274654388428,
    --maxZ = 65.234672546386
    debugPoly = false
  })

local LumberStore = PolyZone:Create({
    vector2(1259.3879394532, -1420.8868408204),
    vector2(1209.861328125, -1429.279296875),
    vector2(1150.0578613282, -1448.7276611328),
    vector2(1110.5675048828, -1420.3491210938),
    vector2(1109.1860351562, -1325.7611083984),
    vector2(1126.0087890625, -1274.2561035156),
    vector2(1177.7580566406, -1228.3356933594),
    vector2(1211.8048095704, -1211.776977539),
    vector2(1261.5858154296, -1206.5618896484),
    vector2(1275.5339355468, -1258.4877929688),
    vector2(1273.0631103516, -1314.7170410156),
    vector2(1270.6723632812, -1372.1616210938)
  }, {
    name="lumber zone",
    --minZ = 37.19465637207,
    --maxZ = 49.15463256836
    debugPoly = false
  })

local WeedStore = PolyZone:Create({
    vector2(-1193.3452148438, -1610.2397460938),
    vector2(-1218.0711669922, -1572.3500976562),
    vector2(-1219.329711914, -1543.3581542968),
    vector2(-1194.4560546875, -1524.5014648438),
    vector2(-1181.0986328125, -1543.0783691406),
    vector2(-1158.9946289062, -1576.2720947266),
    vector2(-1152.6920166016, -1597.1639404296),
    vector2(-1180.9875488282, -1619.4282226562)
  }, {
    name="Weed Zone",
    --minZ = 6.7344551086426,
    --maxZ = 9.9344520568848
    debugPoly = false
  })

local DavisGasStation = PolyZone:Create({
    vector2(205.47840881348, -1242.4401855468),
    vector2(238.95292663574, -1240.4074707032),
    vector2(278.1125793457, -1239.4310302734),
    vector2(303.26440429688, -1238.396850586),
    vector2(336.10272216796, -1239.7768554688),
    vector2(337.72204589844, -1262.4443359375),
    vector2(328.8917541504, -1291.720336914),
    vector2(332.55337524414, -1298.9647216796),
    vector2(349.66693115234, -1306.7271728516),
    vector2(377.1138305664, -1270.83203125),
    vector2(397.00305175782, -1253.5202636718),
    vector2(433.53302001954, -1250.816040039),
    vector2(488.27182006836, -1248.8337402344),
    vector2(520.4935913086, -1250.4086914062),
    vector2(523.341796875, -1284.6341552734),
    vector2(535.55212402344, -1327.5065917968),
    vector2(544.9214477539, -1383.3013916016),
    vector2(546.34075927734, -1451.154296875),
    vector2(513.53582763672, -1452.3015136718),
    vector2(481.52996826172, -1452.6640625),
    vector2(461.11572265625, -1456.091796875),
    vector2(438.55892944336, -1463.9052734375),
    vector2(429.1710510254, -1470.539428711),
    vector2(396.7449645996, -1501.6257324218),
    vector2(423.99392700196, -1542.8383789062),
    vector2(414.03045654296, -1569.9052734375),
    vector2(328.1231994629, -1529.7136230468),
    vector2(268.03430175782, -1484.9819335938),
    vector2(218.49725341796, -1454.7330322266),
    vector2(176.70127868652, -1471.5377197266),
    vector2(135.19998168946, -1439.3309326172),
    vector2(113.7558517456, -1439.754272461),
    vector2(87.039894104004, -1445.2781982422),
    vector2(59.94133758545, -1423.9858398438),
    vector2(-1.9754201173782, -1411.6594238282),
    vector2(-18.783811569214, -1390.1223144532),
    vector2(-51.706275939942, -1361.6762695312),
    vector2(43.78458404541, -1340.2735595704),
    vector2(79.687606811524, -1289.6614990234),
    vector2(132.04319763184, -1271.7209472656),
    vector2(198.96517944336, -1245.2056884766)
  }, {
    name="X Gas",
    --minZ = 31.01424407959,
    --maxZ = 39.814228057862
    debugPoly = false
  })

local LittleSeoulGas = PolyZone:Create({
    vector2(-450.73840332032, -1122.7591552734),
    vector2(-461.8804321289, -1185.282836914),
    vector2(-467.88549804688, -1205.1037597656),
    vector2(-497.46667480468, -1214.4829101562),
    vector2(-521.83038330078, -1230.0072021484),
    vector2(-533.51922607422, -1240.7794189454),
    vector2(-551.13079833984, -1232.7681884766),
    vector2(-580.77453613282, -1217.3266601562),
    vector2(-591.59680175782, -1193.7205810546),
    vector2(-567.4521484375, -1172.273071289),
    vector2(-556.1089477539, -1133.5495605468),
    vector2(-513.794921875, -1121.9653320312),
    vector2(-495.37747192382, -1106.6915283204)
  }, {
    name="gaz little Seoul",
    --minZ = 18.574243545532,
    --maxZ = 36.43419265747
    debugPoly = false
  })

local LittleSeoulClothingStore = PolyZone:Create({
    vector2(-734.38635253906, -1143.0036621094),
    vector2(-761.60650634766, -1159.9946289062),
    vector2(-780.29663085938, -1139.9425048828),
    vector2(-800.35131835938, -1151.3110351562),
    vector2(-829.86041259766, -1132.3873291016),
    vector2(-856.396484375, -1082.6501464844),
    vector2(-838.58117675782, -1067.799194336),
    vector2(-818.40246582032, -1054.849975586),
    vector2(-810.91833496094, -1035.5632324218),
    vector2(-788.05499267578, -1051.6071777344),
    vector2(-747.0337524414, -1084.5134277344),
    vector2(-740.96960449218, -1120.836303711)
  }, {
    name="clothing stor little soeul",
    --minZ = 10.554187774658,
    --maxZ = 16.09421157837
    debugPoly = false
  })

local MilitaryStore = PolyZone:Create({
    vector2(-1127.3560791016, 2623.201171875),
    vector2(-1150.3854980468, 2651.4831542968),
    vector2(-1155.322631836, 2675.6057128906),
    vector2(-1124.4580078125, 2715.830078125),
    vector2(-1107.0754394532, 2731.7880859375),
    vector2(-1057.2028808594, 2751.2131347656),
    vector2(-1043.610961914, 2732.6708984375),
    vector2(-1039.3505859375, 2688.2001953125),
    vector2(-1072.787475586, 2650.2890625),
    vector2(-1098.4450683594, 2632.2548828125)
  }, {
    name="Store militaire",
    --minZ = 21.980421066284,
    --maxZ = 39.20038986206
    debugPoly = false
  })

local SandyGasStation = PolyZone:Create({
    vector2(1734.8978271484, 5000.9248046875),
    vector2(1743.4666748046, 4987.5302734375),
    vector2(1738.1298828125, 4958.9765625),
    vector2(1710.4775390625, 4910.7143554688),
    vector2(1695.210571289, 4893.4799804688),
    vector2(1672.3619384766, 4884.9296875),
    vector2(1655.2419433594, 4889.5576171875),
    vector2(1641.8021240234, 4931.7397460938),
    vector2(1684.9464111328, 4967.9794921875),
    vector2(1702.9864501954, 4984.9296875)
  }, {
    name="gas ville2",
    --minZ = 43.540382385254,
    --maxZ = 60.500385284424
    debugPoly = false
  })

local Road15GasStation = PolyZone:Create({
    vector2(2549.8330078125, 678.60711669922),
    vector2(2596.0939941406, 616.33001708984),
    vector2(2613.611328125, 531.79736328125),
    vector2(2614.9682617188, 454.57669067382),
    vector2(2610.34375, 346.7463684082),
    vector2(2592.0869140625, 240.5816192627),
    vector2(2549.6760253906, 120.97450256348),
    vector2(2539.6887207032, 132.76225280762),
    vector2(2525.2827148438, 186.67181396484),
    vector2(2515.0769042968, 258.03204345704),
    vector2(2522.2744140625, 396.83712768554),
    vector2(2524.9221191406, 551.22155761718),
    vector2(2540.7260742188, 657.84228515625)
  }, {
    name="Gasepump Road15",
    --minZ = 104.00483703614,
    --maxZ = 151.38478088378
    debugPoly = false
  })

local HighwayStore = PolyZone:Create({
    vector2(2651.6701660156, 3181.7541503906),
    vector2(2616.9018554688, 3224.8864746094),
    vector2(2595.9997558594, 3268.1923828125),
    vector2(2623.8408203125, 3310.44140625),
    vector2(2648.7353515625, 3334.4558105468),
    vector2(2673.6071777344, 3362.3259277344),
    vector2(2670.48828125, 3408.3427734375),
    vector2(2639.6262207032, 3448.3208007812),
    vector2(2605.1606445312, 3486.8735351562),
    vector2(2637.3015136718, 3570.4606933594),
    vector2(2705.0434570312, 3577.1401367188),
    vector2(2813.388671875, 3559.1037597656),
    vector2(2838.3142089844, 3537.8923339844),
    vector2(2828.6674804688, 3495.4978027344),
    vector2(2810.404296875, 3452.0290527344),
    vector2(2757.4465332032, 3332.2841796875),
    vector2(2693.236328125, 3208.9714355468)
  }, {
    name="Store Highway",
    --minZ = 55.323230743408,
    --maxZ = 71.883201599122
    debugPoly = false
  })

local MilitaryBaseGasStation = PolyZone:Create({
    vector2(-2359.4191894532, 2241.6789550782),
    vector2(-2359.0991210938, 2401.9221191406),
    vector2(-2443.5151367188, 2424.4030761718),
    vector2(-2535.9985351562, 2438.7768554688),
    vector2(-2588.587890625, 2455.3195800782),
    vector2(-2636.236328125, 2429.2141113282),
    vector2(-2685.3117675782, 2393.3833007812),
    vector2(-2712.4609375, 2356.2541503906),
    vector2(-2729.2436523438, 2314.6877441406),
    vector2(-2714.6782226562, 2271.5251464844),
    vector2(-2690.4426269532, 2260.9379882812),
    vector2(-2654.4721679688, 2253.5041503906),
    vector2(-2557.1704101562, 2244.4853515625),
    vector2(-2501.005859375, 2239.9658203125)
  }, {
    name="Gasepump Military",
    --minZ = 27.105224609375,
    --maxZ = 72.185134887696
    debugPoly = false
  })

local GreatOceanStores = PolyZone:Create({
    vector2(-3099.7736816406, 1248.001953125),
    vector2(-3093.1770019532, 1203.4373779296),
    vector2(-3087.5710449218, 1129.4560546875),
    vector2(-3100.9194335938, 1052.2277832032),
    vector2(-3122.8393554688, 995.37585449218),
    vector2(-3160.9089355468, 950.7611694336),
    vector2(-3217.2880859375, 921.54681396484),
    vector2(-3235.1813964844, 971.06750488282),
    vector2(-3260.4416503906, 978.70239257812),
    vector2(-3259.7082519532, 987.67181396484),
    vector2(-3256.9912109375, 1012.2630004882),
    vector2(-3235.1892089844, 1042.6569824218),
    vector2(-3229.7067871094, 1068.6821289062),
    vector2(-3210.0737304688, 1126.4608154296),
    vector2(-3191.9812011718, 1171.9833984375),
    vector2(-3186.6755371094, 1205.9327392578),
    vector2(-3169.4135742188, 1252.1518554688),
    vector2(-3122.419921875, 1254.3583984375)
  }, {
    name="Great Ocean Stores",
    --minZ = 12.90511894226,
    --maxZ = 60.405143737792
    debugPoly = false
  })

local DinoGasStation = PolyZone:Create({
    vector2(2502.1672363282, 2691.7485351562),
    vector2(2504.3754882812, 2755.1110839844),
    vector2(2518.5656738282, 2770.2844238282),
    vector2(2553.2275390625, 2718.0988769532),
    vector2(2594.00390625, 2675.2260742188),
    vector2(2614.3015136718, 2648.0646972656),
    vector2(2631.2663574218, 2609.3210449218),
    vector2(2640.6340332032, 2571.3039550782),
    vector2(2643.8681640625, 2530.5893554688),
    vector2(2611.0705566406, 2530.5217285156),
    vector2(2557.3444824218, 2543.7912597656),
    vector2(2526.5698242188, 2548.9536132812),
    vector2(2513.8620605468, 2548.1235351562),
    vector2(2501.74609375, 2558.9018554688),
    vector2(2489.3530273438, 2576.8483886718)
  }, {
    name="DinoGasStation",
    --minZ = 47.179809570312,
    --maxZ = 61.979824066162
    debugPoly = false
  })

local LaMesaPD = PolyZone:Create({
    vector2(770.21392822266, -1462.0826416016),
    vector2(842.68243408204, -1448.6179199218),
    vector2(850.4927368164, -1420.5280761718),
    vector2(877.8930053711, -1369.0983886718),
    vector2(879.82592773438, -1289.7912597656),
    vector2(877.28259277344, -1274.3646240234),
    vector2(871.7310180664, -1256.6649169922),
    vector2(848.31958007812, -1239.310913086),
    vector2(822.6435546875, -1233.1678466796),
    vector2(804.5453491211, -1235.128540039),
    vector2(788.73876953125, -1236.1319580078),
    vector2(783.82147216796, -1259.4428710938),
    vector2(783.06408691406, -1301.8026123046),
    vector2(770.22448730468, -1332.228515625),
    vector2(752.21081542968, -1336.5460205078),
    vector2(745.23327636718, -1347.8090820312),
    vector2(758.1909790039, -1424.9826660156)
  }, {
    name="La Mesa PD",
    --minZ = 28.245086669922,
    --maxZ = 52.62511062622
    debugPoly = false
  })

local LSPort = PolyZone:Create({
    vector2(1272.8264160156, -3486.4909667968),
    vector2(823.15783691406, -3425.9809570312),
    vector2(725.08697509766, -3350.1960449218),
    vector2(605.17712402344, -3371.90625),
    vector2(460.78036499024, -3402.6118164062),
    vector2(419.28057861328, -3326.4189453125),
    vector2(411.08422851562, -3197.9814453125),
    vector2(409.73040771484, -3079.5515136718),
    vector2(418.8039855957, -2910.0173339844),
    vector2(462.41595458984, -2892.40625),
    vector2(543.76867675782, -2879.3122558594),
    vector2(442.74493408204, -2808.1010742188),
    vector2(432.37197875976, -2757.6630859375),
    vector2(429.53717041016, -2696.0266113282),
    vector2(465.52926635742, -2642.072265625),
    vector2(582.98248291016, -2651.5598144532),
    vector2(701.1782836914, -2643.8073730468),
    vector2(767.99676513672, -2639.6884765625),
    vector2(1006.9265136718, -2807.8129882812),
    vector2(1308.574584961, -2838.2104492188),
    vector2(1319.482788086, -3246.6704101562),
    vector2(1312.9030761718, -3400.7290039062)
    }, {
    name="Port Ls",
    minZ = 3.5,
    maxZ = 64.0,
    debugPoly = false
  })

local Store1005 = PolyZone:Create({
    vector2(1497.2160644532, 6438.3383789062),
    vector2(1527.1197509766, 6468.4765625),
    vector2(1562.5983886718, 6472.1640625),
    vector2(1590.3822021484, 6466.521484375),
    vector2(1620.4427490234, 6454.9833984375),
    vector2(1653.1431884766, 6444.2221679688),
    vector2(1681.4616699218, 6448.8896484375),
    vector2(1712.8228759766, 6438.115234375),
    vector2(1748.0458984375, 6421.1767578125),
    vector2(1767.3204345704, 6403.6025390625),
    vector2(1782.9313964844, 6380.8530273438),
    vector2(1790.6202392578, 6362.0375976562),
    vector2(1789.902709961, 6338.5952148438),
    vector2(1777.9567871094, 6330.0595703125),
    vector2(1725.9975585938, 6339.357421875),
    vector2(1641.7139892578, 6366.4165039062),
    vector2(1558.6325683594, 6396.9765625),
    vector2(1498.60546875, 6425.7094726562)
  }, {
    name="Store 1005",
    --minZ = 26.054588317872,
    --maxZ = 39.85456085205
    debugPoly = false
  })

local HumaneLabs = PolyZone:Create({
    vector2(3635.2016601562, 3995.1052246094),
    vector2(3508.2497558594, 3977.1145019532),
    vector2(3335.5229492188, 3872.7163085938),
    vector2(3233.5913085938, 3737.6022949218),
    vector2(3173.6403808594, 3590.4645996094),
    vector2(3162.6489257812, 3515.2150878906),
    vector2(3173.2934570312, 3486.2145996094),
    vector2(3216.1181640625, 3468.4826660156),
    vector2(3294.1098632812, 3537.9692382812),
    vector2(3498.8859863282, 3527.2763671875),
    vector2(3608.6865234375, 3505.3994140625),
    vector2(3761.0358886718, 3543.5344238282),
    vector2(3869.31640625, 3646.439453125),
    vector2(3850.6328125, 3825.6525878906),
    vector2(3732.4599609375, 3989.0114746094)
  }, {
    name="Labo",
    --minZ = 53.514533996582,
    --maxZ = 148.27444458008
    debugPoly = false
  })

local MechanicFleeka = PolyZone:Create({
    vector2(-272.27444458008, -26.943901062012),
    vector2(-281.8630065918, -65.273696899414),
    vector2(-293.44595336914, -95.23031616211),
    vector2(-316.42224121094, -87.80558013916),
    vector2(-369.95748901368, -70.238746643066),
    vector2(-383.4748840332, -95.754104614258),
    vector2(-400.6022644043, -94.118774414062),
    vector2(-410.01318359375, -80.152473449708),
    vector2(-412.83557128906, -72.625526428222),
    vector2(-383.24655151368, 5.5036425590516),
    vector2(-379.06756591796, 15.18971824646),
    vector2(-329.0327758789, 4.9441928863526),
    vector2(-277.80801391602, -11.034385681152)
  }, {
    name="Fleek OldMechano",
    --minZ = 50.174133300782,
    --maxZ = 67.654098510742
    debugPoly = false
  })

local LifeInvaderFleeka = PolyZone:Create({
    vector2(-1189.4753417968, -277.39764404296),
    vector2(-1177.3326416016, -302.18054199218),
    vector2(-1182.1794433594, -333.98880004882),
    vector2(-1184.2778320312, -345.28845214844),
    vector2(-1184.712890625, -363.55749511718),
    vector2(-1183.5378417968, -381.91775512696),
    vector2(-1195.0498046875, -384.59436035156),
    vector2(-1252.1728515625, -411.63208007812),
    vector2(-1280.015991211, -363.27728271484),
    vector2(-1293.4317626954, -321.47006225586),
    vector2(-1265.798461914, -304.9974975586),
    vector2(-1210.2625732422, -277.32696533204),
    vector2(-1197.5493164062, -267.46795654296),
    vector2(-1184.9421386718, -265.41528320312)
  }, {
    name="Fleeka LiveInvader",
    --minZ = 39.151672363282,
    --maxZ = 47.891654968262
    debugPoly = false
  })

local DelPierroStore = PolyZone:Create({
    vector2(-1542.0052490234, -378.14758300782),
    vector2(-1528.8367919922, -367.02355957032),
    vector2(-1510.5147705078, -368.0066833496),
    vector2(-1499.1486816406, -375.68463134766),
    vector2(-1475.0489501954, -358.04595947266),
    vector2(-1459.0225830078, -374.48168945312),
    vector2(-1448.0805664062, -377.98706054688),
    vector2(-1444.1795654296, -380.28112792968),
    vector2(-1431.8801269532, -398.05987548828),
    vector2(-1439.1137695312, -409.1448059082),
    vector2(-1474.5020751954, -430.63098144532),
    vector2(-1517.2053222656, -455.54000854492),
    vector2(-1540.9165039062, -442.80786132812),
    vector2(-1567.4383544922, -416.64505004882)
  }, {
    name="Store DelPierro",
    --minZ = 44.906112670898,
    --maxZ = 49.506103515625
    debugPoly = false
  })

local BeachParking = PolyZone:Create({
    vector2(-1132.3032226562, -1503.4630126954),
    vector2(-1119.9212646484, -1518.650024414),
    vector2(-1132.060913086, -1527.2834472656),
    vector2(-1148.8145751954, -1506.8358154296),
    vector2(-1180.4333496094, -1529.8337402344),
    vector2(-1192.7517089844, -1535.8645019532),
    vector2(-1232.8334960938, -1472.9344482422),
    vector2(-1245.1724853516, -1458.1594238282),
    vector2(-1216.156616211, -1435.58984375),
    vector2(-1204.0500488282, -1412.797241211),
    vector2(-1193.9348144532, -1414.9600830078),
    vector2(-1189.5943603516, -1418.7312011718),
    vector2(-1142.0061035156, -1388.2138671875),
    vector2(-1116.7901611328, -1377.250366211),
    vector2(-1084.695678711, -1379.9931640625),
    vector2(-1040.2189941406, -1309.4522705078),
    vector2(-1001.001159668, -1359.4681396484),
    vector2(-998.00592041016, -1431.7104492188),
    vector2(-968.66687011718, -1459.1965332032)
  }, {
    name="Beach Parking",
    --minZ = 5.521876335144,
    --maxZ = 12.421876907348
    debugPoly = false
  })

local LittleSeoulParking = PolyZone:Create({
    vector2(-498.0299987793, -842.97045898438),
    vector2(-492.66464233398, -787.22686767578),
    vector2(-497.0007019043, -692.39782714844),
    vector2(-491.3152770996, -666.08642578125),
    vector2(-440.16534423828, -665.40997314454),
    vector2(-440.04013061524, -775.77770996094),
    vector2(-437.92538452148, -838.90618896484),
    vector2(-484.18768310546, -844.8158569336)
  }, {
    name="Little Soeul Parking",
    --minZ = 35.526176452636,
    --maxZ = 38.746170043946
    debugPoly = false
  })

local AltaStStores = PolyZone:Create({
    vector2(220.21560668946, -197.03298950196),
    vector2(203.74667358398, -227.27195739746),
    vector2(165.00715637208, -228.97207641602),
    vector2(101.064743042, -206.0941619873),
    vector2(10.179504394532, -170.0358428955),
    vector2(-75.186569213868, -135.86430358886),
    vector2(-90.395027160644, -98.685173034668),
    vector2(-58.980743408204, -89.753410339356),
    vector2(32.91605758667, -122.03142547608),
    vector2(98.02946472168, -147.81552124024),
    vector2(149.41926574708, -165.22898864746),
    vector2(165.47117614746, -141.40330505372),
    vector2(174.39865112304, -157.42628479004),
    vector2(171.4327697754, -176.57829284668),
    vector2(220.87672424316, -195.63255310058)
  }, {
    name="Stores",
    --minZ = 56.812454223632,
    --maxZ = 70.612426757812
      debugPoly = false
  })

local HoteltoLegion = PolyZone:Create({
    vector2(-168.88377380372, -922.88201904296),
    vector2(-134.07580566406, -889.30438232422),
    vector2(-37.661338806152, -905.2758178711),
    vector2(-52.293277740478, -963.94494628906)
    }, {
    name="Hotel to Legion",
    --minZ = 56.812454223632,
    --maxZ = 70.612426757812
      debugPoly = false
  })

local PaletoBank = PolyZone:Create({
    vector2(-56.580612182618, 6500.2407226562),
    vector2(-28.899211883544, 6481.6127929688),
    vector2(-46.834602355958, 6450.0541992188),
    vector2(-51.632404327392, 6443.6342773438),
    vector2(-69.108085632324, 6425.0258789062),
    vector2(-77.41911315918, 6411.4877929688),
    vector2(-93.78726196289, 6397.1928710938),
    vector2(-109.06134796142, 6392.40234375),
    vector2(-136.84959411622, 6371.9345703125),
    vector2(-159.42846679688, 6395.2280273438),
    vector2(-134.62202453614, 6421.1743164062),
    vector2(-152.1555480957, 6425.6713867188),
    vector2(-156.34175109864, 6430.224609375),
    vector2(-161.58265686036, 6448.7895507812),
    vector2(-183.37281799316, 6440.8452148438),
    vector2(-211.08020019532, 6457.2568359375),
    vector2(-200.9486541748, 6465.7143554688),
    vector2(-190.9328918457, 6469.6962890625),
    vector2(-131.02612304688, 6547.95703125),
    vector2(-114.14022827148, 6528.146484375),
    vector2(-100.87448883056, 6508.1547851562)
      }, {
    name="Paleto Bank",
    --minZ = 56.812454223632,
    --maxZ = 70.612426757812
      debugPoly = false
  })

local RealEstate = PolyZone:Create({
    vector2(-559.85125732422, 234.81256103516),
    vector2(-525.73040771484, 273.4360961914),
    vector2(-619.70593261718, 298.62368774414),
    vector2(-624.38287353516, 305.69247436524),
    vector2(-703.33184814454, 319.73239135742),
    vector2(-744.63037109375, 313.12878417968),
    vector2(-812.13549804688, 309.81942749024),
    vector2(-752.98681640625, 278.68646240234),
    vector2(-771.44787597656, 194.81942749024),
    vector2(-660.69885253906, 214.90069580078),
    vector2(-688.39367675782, 175.33624267578),
    vector2(-661.96868896484, 148.82453918458),
    vector2(-637.32104492188, 175.12190246582),
    vector2(-587.13800048828, 179.42041015625),
    vector2(-583.80236816406, 206.71992492676),
    vector2(-586.84106445312, 242.12326049804)
        }, {
    name="Real Estate",
    --minZ = 56.812454223632,
    --maxZ = 70.612426757812
      debugPoly = false
  })

local CityHallClothingStore = PolyZone:Create({
    vector2(-162.69998168946, -293.06427001954),
    vector2(-171.18019104004, -295.1762084961),
    vector2(-179.65014648438, -307.0788269043),
    vector2(-167.10781860352, -302.37609863282),
    vector2(-167.40940856934, -310.61264038086),
    vector2(-160.36447143554, -314.17541503906),
    vector2(-184.4610748291, -364.97500610352),
    vector2(-145.27095031738, -398.47702026368),
    vector2(-117.72843933106, -378.30938720704),
    vector2(-125.39427947998, -343.83081054688),
    vector2(-93.734085083008, -269.45513916016),
    vector2(-71.12727355957, -216.86195373536),
    vector2(-114.7601928711, -178.66598510742)
        }, {
    name="CityHall Clothing Store",
    --minZ = 56.812454223632,
    --maxZ = 70.612426757812
      debugPoly = false
  })



local Recyclingcenter = PolyZone:Create({
    vector2(2289.8579101562, 3104.4851074218),
    vector2(2299.9829101562, 3142.0480957032),
    vector2(2356.1994628906, 3169.3671875),
    vector2(2393.6569824218, 3169.3762207032),
    vector2(2436.7231445312, 3161.9033203125),
    vector2(2438.0366210938, 3023.9821777344),
    vector2(2317.5769042968, 3024.7553710938),
    vector2(2303.2236328125, 3036.236328125)
  }, {
    name="Recycling Center",
    --minZ = 47.776893615722,
    --maxZ = 50.336891174316
  })

  local nfs = PolyZone:Create({

    vector2(-360.8719177246, -183.80026245118),
    vector2(-333.0390625, -210.40557861328),
    vector2(-300.42379760742, -209.14263916016),
    vector2(-303.44717407226, -147.98526000976),
    vector2(-312.08978271484, -132.64195251464),
    vector2(-296.69696044922, -100.89630126954),
    vector2(-305.16848754882, -101.54711914062),
    vector2(-314.80508422852, -98.151275634766),
    vector2(-312.20809936524, -91.52896118164),
    vector2(-326.98037719726, -85.300407409668),
    vector2(-333.84478759766, -91.193725585938),
    vector2(-371.32232666016, -77.598533630372),
    vector2(-399.23007202148, -67.267364501954),
    vector2(-428.56649780274, -60.032592773438),
    vector2(-447.40682983398, -79.814147949218),
    vector2(-415.11407470704, -98.22560119629),
    vector2(-409.81497192382, -95.333518981934),
    vector2(-379.40487670898, -150.6605682373),
    vector2(-383.6379699707, -154.30917358398),
    vector2(-366.74584960938, -182.94229125976)
}, {
  name="NFS",
  --minZ = 25.256786346436,
  --maxZ = 27.976783752442
})

local recyclinggee = PolyZone:Create({
    vector2(1470.6541748046, -2237.4753417968),
    vector2(1469.696899414, -2211.9018554688),
    vector2(1477.4747314454, -2070.5378417968),
    vector2(1512.0539550782, -2031.7845458984),
    vector2(1555.5970458984, -2044.2451171875),
    vector2(1577.601928711, -2084.6374511718),
    vector2(1591.0502929688, -2154.2839355468),
    vector2(1568.3422851562, -2237.3696289062),
    vector2(1528.4436035156, -2269.771484375)
  }, {
    name="recyclinggee",
    --minZ = 82.195877075196,
    --maxZ = 97.375846862792
  })

  local recyclageville = PolyZone:Create({
    vector2(-404.38925170898, -1731.2716064454),
    vector2(-431.57037353516, -1759.486328125),
    vector2(-474.50482177734, -1770.7626953125),
    vector2(-514.0853881836, -1762.7279052734),
    vector2(-560.33557128906, -1733.1251220704),
    vector2(-586.78405761718, -1711.8470458984),
    vector2(-625.47570800782, -1682.8012695312),
    vector2(-644.08782958984, -1663.7268066406),
    vector2(-658.79724121094, -1633.1760253906),
    vector2(-628.64440917968, -1592.8420410156),
    vector2(-605.46795654296, -1579.1041259766),
    vector2(-583.41247558594, -1582.7297363282),
    vector2(-557.27056884766, -1598.4461669922),
    vector2(-540.6396484375, -1603.609375),
    vector2(-483.44989013672, -1636.380493164),
    vector2(-471.85940551758, -1648.4040527344),
    vector2(-410.19717407226, -1671.8347167968),
    vector2(-397.57556152344, -1675.1928710938),
    vector2(-393.65829467774, -1699.7277832032)
  }, {
    name="RecyclageVille",
    --minZ = 19.337749481202,
    --maxZ = 27.337741851806
  })
  
  local garbagejob = PolyZone:Create({
    vector2(-335.9846496582, -1651.1436767578),
  vector2(-368.56057739258, -1637.8009033204),
  vector2(-357.13537597656, -1588.4044189454),
  vector2(-371.19369506836, -1557.1528320312),
  vector2(-370.95056152344, -1519.638305664),
  vector2(-361.86206054688, -1500.8530273438),
  vector2(-386.94540405274, -1465.4968261718),
  vector2(-385.01040649414, -1414.2254638672),
  vector2(-250.9926147461, -1416.0604248046),
  vector2(-265.04461669922, -1494.6307373046),
  vector2(-279.87704467774, -1548.9617919922)
  }, {
    name="GarbageJob",
    --minZ = 22.369997024536,
    --maxZ = 37.729930877686
  })

  local VangelicoBarber = PolyZone:Create({
    vector2(-841.63214111328, -156.41372680664),
    vector2(-875.48455810546, -178.60502624512),
    vector2(-818.19854736328, -277.8650817871),
    vector2(-784.21069335938, -255.87408447266),
    vector2(-724.65747070312, -228.588180542),
    vector2(-686.3247680664, -207.08386230468),
    vector2(-676.13299560546, -182.60025024414),
    vector2(-718.35717773438, -118.59913635254),
    vector2(-738.19921875, -105.22863769532)
    }, {
    name="VangelicoBarber",
    --minZ = 22.369997024536,
    --maxZ = 37.729930877686
  })
  
  local VespucciCardealer = PolyZone:Create({
    vector2(-861.83435058594, -986.22760009766),
    vector2(-792.66015625, -1114.7741699218),
    vector2(-762.02160644532, -1098.0506591796),
    vector2(-712.92919921875, -1066.7995605468),
    vector2(-737.9652709961, -1022.9075317382),
    vector2(-744.27697753906, -1026.9365234375),
    vector2(-757.60180664062, -989.75793457032),
    vector2(-777.37780761718, -959.67797851562)
      }, {
    name="VespucciCardealer",
    --minZ = 22.369997024536,
    --maxZ = 37.729930877686
  })
  
  local MegaMaulBasBarber = PolyZone:Create({
    vector2(207.03007507324, -1735.1882324218),
    vector2(215.45027160644, -1750.9028320312),
    vector2(173.64666748046, -1788.6638183594),
    vector2(136.03372192382, -1760.5249023438),
    vector2(131.73202514648, -1742.515258789),
    vector2(93.30958557129, -1710.8637695312),
    vector2(107.74012756348, -1694.0065917968),
    vector2(133.53623962402, -1694.1300048828),
    vector2(169.27513122558, -1711.0541992188),
    vector2(174.46772766114, -1702.8858642578),
    vector2(189.57405090332, -1714.6872558594)
        }, {
    name="MegaMaulBasBarber",
    --minZ = 22.369997024536,
    --maxZ = 37.729930877686
  })

  local uwucafe = PolyZone:Create({
    vector2(-628.17309570312, -967.99542236328),
    vector2(-548.30163574218, -967.0185546875),
    vector2(-515.7777709961, -1063.678100586),
    vector2(-541.72650146484, -1178.9938964844),
    vector2(-615.16180419922, -1162.146850586)
  }, {
    name="uwucafe",
    --minZ = 24.762435913086,
    --maxZ = 32.282428741456
    debugPoly = false
  })

  local vespuccimarket = PolyZone:Create({
    vector2(-1311.4771728516, -1407.359375),
    vector2(-1409.0560302734, -1390.2003173828),
    vector2(-1493.760131836, -1432.0987548828),
    vector2(-1277.0471191406, -1725.1872558594),
    vector2(-1163.525756836, -1490.3267822266),
    vector2(-1244.2857666016, -1363.1094970704)
  }, {
    name="vespuccimarket",
    --minZ = 16.649854660034,
    --maxZ = 16.649854660034
  })

  local delperrostorge = PolyZone:Create({
    vector2(-1592.2056884766, -865.02349853516),
    vector2(-1650.9196777344, -816.10681152344),
    vector2(-1621.853515625, -780.50592041016),
    vector2(-1561.8135986328, -830.83782958984)
  }, {
    name="delperrostorge",
    --minZ = 16.649854660034,
    --maxZ = 16.649854660034
  })
  
  local mirrorparckstorage = PolyZone:Create({
    vector2(831.91540527344, -1016.9793701172),
  vector2(1005.631652832, -1004.6372070312),
  vector2(934.28784179688, -1091.3776855468),
  vector2(874.75, -1094.2044677734),
  vector2(862.50061035156, -1056.9846191406)
  }, {
    name="mirrorparckstorage",
    --minZ = 16.649854660034,
    --maxZ = 16.649854660034
  })

  local pizzeria = PolyZone:Create({
    vector2(824.45422363282, -832.19305419922),
  vector2(824.40252685546, -816.30334472656),
  vector2(819.25, -816.7275390625),
  vector2(820.65069580078, -802.10443115234),
  vector2(820.8539428711, -775.60485839844),
  vector2(821.23846435546, -769.8931274414),
  vector2(829.35290527344, -767.49206542968),
  vector2(844.23352050782, -755.04986572266),
  vector2(800.39337158204, -688.98443603516),
  vector2(758.8471069336, -666.19940185546),
  vector2(759.28381347656, -834.41687011718)
   }, {
    name="pizzeria",
     --minZ = 35.883296966552,
      --maxZ = 44.04328918457
  })

function IsInSafeZone()
    local plyPed = PlayerPedId()
    local coord = GetEntityCoords(plyPed)
    InHuting = Hunting:isPointInside(coord)
    InIllegalHunting = IllegalHunting:isPointInside(coord)
    InHotel = Hotel:isPointInside(coord)
    InRedPark = RedPark:isPointInside(coord)
    InPillboxH = PillboxH:isPointInside(coord)
    InMRPD = MRPD:isPointInside(coord)
    InCityhall = Cityhall:isPointInside(coord)
    InMRPDbridge = MRPDbridge:isPointInside(coord)
    InMechanic = Mechanic:isPointInside(coord)
    InNotary = Notary:isPointInside(coord)
    InHollywoodbvd = Hollywoodbvd:isPointInside(coord)
    InCasino = Casino:isPointInside(coord)
    InPrison = Prison:isPointInside(coord)
    InSandyPD = SandyPD:isPointInside(coord)
    InPaletoPD = PaletoPD:isPointInside(coord)
    InPaletoHospital = PaletoHospital:isPointInside(coord)
    InPaletoGas = PaletoGas:isPointInside(coord)
    InMilitaryBase = MilitaryBase:isPointInside(coord)
    InAirport = Airport:isPointInside(coord)
    InFleekaW = FleekaW:isPointInside(coord)
    InGasStationY = GasStationY:isPointInside(coord)
    InManege = Manege:isPointInside(coord)
    InCardealer = Cardealer:isPointInside(coord)
    InUniversity = University:isPointInside(coord)
    InFleekaPillbox = FleekaPillbox:isPointInside(coord)
    InStoreChang = StoreChang:isPointInside(coord)
    InVespucciPD = VespucciPD:isPointInside(coord)
    InTimber = Timber:isPointInside(coord)
    InStoreHunting = StoreHunting:isPointInside(coord)
    InBaseDRS = BaseDRS:isPointInside(coord)
    InStoreNorthRockford = StoreNorthRockford:isPointInside(coord)
    InStoreMirrorpark = StoreMirrorpark:isPointInside(coord)
  --  InStoreVespucci = StoreVespucci:isPointInside(coord)
    InBahamas = Bahamas:isPointInside(coord)
    InWeazle = Weazle:isPointInside(coord)
    InStorePacificbank = StorePacificbank:isPointInside(coord)
    InHardwareStore = HardwareStore:isPointInside(coord)
    InDavisPD = DavisPD:isPointInside(coord)
    InBahamasGasStation = BahamasGasStation:isPointInside(coord)
    InSandyBou3lem = SandyBou3lem:isPointInside(coord)
    InHuntingStore = HuntingStore:isPointInside(coord)
    InLumberStore = LumberStore:isPointInside(coord)
    InWeedStore = WeedStore:isPointInside(coord)
    InDavisGasStation = DavisGasStation:isPointInside(coord)
    InLittleSeoulGas = LittleSeoulGas:isPointInside(coord)
    InLittleSeoulClothingStore = LittleSeoulClothingStore:isPointInside(coord)
    InMilitaryStore = MilitaryStore:isPointInside(coord)
    InSandyGasStation = SandyGasStation:isPointInside(coord)
    InRoad15GasStation = Road15GasStation:isPointInside(coord)
    InHighwayStore = HighwayStore:isPointInside(coord)
    InMilitaryBaseGasStation = MilitaryBaseGasStation:isPointInside(coord)
    InGreatOceanStores = GreatOceanStores:isPointInside(coord)
    InDinoGasStation = DinoGasStation:isPointInside(coord)
    InLaMesaPD = LaMesaPD:isPointInside(coord)
    InLSPort = LSPort:isPointInside(coord)
    InStore1005 = Store1005:isPointInside(coord)
    InHumaneLabs = HumaneLabs:isPointInside(coord)
    InMechanicFleeka = MechanicFleeka:isPointInside(coord)
    InLifeInvaderFleeka = LifeInvaderFleeka:isPointInside(coord)
    InDelPierroStore = DelPierroStore:isPointInside(coord)
    InBeachParking = BeachParking:isPointInside(coord)
    InLittleSeoulParking = LittleSeoulParking:isPointInside(coord)
    InAltaStStores = AltaStStores:isPointInside(coord)
    InHoteltoLegion = HoteltoLegion:isPointInside(coord)
    InPaletoBank = PaletoBank:isPointInside(coord)
    InRealEstate = RealEstate:isPointInside(coord)
    InCityHallClothingStore = CityHallClothingStore:isPointInside(coord)
    InRecyclingcenter = Recyclingcenter:isPointInside(coord)
    Innfs = nfs:isPointInside(coord)
    Inrecyclinggee = recyclinggee:isPointInside(coord)
    Inrecyclageville = recyclageville:isPointInside(coord)
    Ingarbagejob = garbagejob:isPointInside(coord)
    InVangelicoBarber = VangelicoBarber:isPointInside(coord)
    InVespucciCardealer = VespucciCardealer:isPointInside(coord)
    InMegaMaulBasBarber = MegaMaulBasBarber:isPointInside(coord)
    Inuwucafe = uwucafe:isPointInside(coord)
    Invespuccimarket = vespuccimarket:isPointInside(coord)
    Indelperrostorge = delperrostorge:isPointInside(coord)
    Inmirrorparckstorage = mirrorparckstorage:isPointInside(coord)
    Inpizzeria = pizzeria:isPointInside(coord)
    Inhotell2s = hotell2s:isPointInside(coord)

    if InMegaMaulBasBarber or InVespucciCardealer or InVangelicoBarber or Ingarbagejob or Inrecyclageville or Inrecyclinggee or Innfs or InRecyclingcenter or InCityHallClothingStore or InRealEstate or InHoteltoLegion or InPaletoBank or InBeachParking or InLittleSeoulParking or InAltaStStores or InMechanicFleeka or InLifeInvaderFleeka or InDelPierroStore or InRoad15GasStation or InHighwayStore or InMilitaryBaseGasStation or InGreatOceanStores or InDinoGasStation or InLaMesaPD or InLSPort or InStore1005 or InHumaneLabs or InSandyGasStation or InRoad15GasStation or InHighwayStore or InLittleSeoulGas or InLittleSeoulClothingStore or InMilitaryStore or InStorePacificbank or InHardwareStore or InDavisPD or InBahamasGasStation or InSandyBou3lem or InHuntingStore or InLumberStore or InWeedStore or InDavisGasStation or InVespucciPD or InTimber or InStoreHunting or InBaseDRS or InStoreNorthRockford or InStoreNorthRockford or InStoreMirrorpark or InBahamas or InWeazle or InStoreChang or InFleekaW or InGasStationY or InManege or InCardealer or InUniversity or InFleekaPillbox or InHotel or InRedPark or InPillboxH or InMRPD or InCityhall or InMRPDbridge or InMechanic or InNotary or InHollywoodbvd or InCasino or InPrison or InSandyPD or InPaletoPD or InPaletoHospital or InPaletoGas or InMilitaryBase or InAirport or Inuwucafe or Invespuccimarket or Indelperrostorge or Inmirrorparckstorage or Inpizzeria or Inhotell2s then 
        SafeZone = true
    else
        SafeZone = false
    end
end
 
exports('IsInSafeZone', function()
  return SafeZone
end)


------------------------------ SAFEZONE END ----------------------------------

DisplayRadar(false)

local function CinematicShow(bool)
    SetRadarBigmapEnabled(true, false)
    Wait(0)
    SetRadarBigmapEnabled(false, false)
    if bool then
        for i = CinematicHeight, 0, -1.0 do
            Wait(10)
            w = i
        end
    else
        for i = 0, CinematicHeight, 1.0 do
            Wait(10)
            w = i
        end
    end
end

local function loadSettings(settings)
    for k, v in pairs(settings) do
        if k == 'isToggleMapShapeChecked' then
            Menu.isToggleMapShapeChecked = v
            SendNUIMessage({ test = true, event = k, toggle = v })
        elseif k == 'isCinematicModeChecked' then
            Menu.isCinematicModeChecked = v
            CinematicShow(v)
            SendNUIMessage({ test = true, event = k, toggle = v })
        elseif k == 'isChangeFPSChecked' then
            Menu[k] = v
            local val = v and 'Optimized' or 'Synced'
            SendNUIMessage({ test = true, event = k, toggle = val })
        else
            Menu[k] = v
            SendNUIMessage({ test = true, event = k, toggle = v })
        end
    end
    QBCore.Functions.Notify(Lang:t('notify.hud_settings_loaded'), 'success')
    Wait(1000)
    TriggerEvent('hud:client:LoadMap')
end

local function saveSettings()
    SetResourceKvp('hudSettings', json.encode(Menu))
end

local function hasHarness(items)
    local ped = PlayerPedId()
    if not IsPedInAnyVehicle(ped, false) then return end

    local _harness = false
    if items then
        for _, v in pairs(items) do
            if v.name == 'harness' then
                _harness = true
            end
        end
    end

    harness = _harness
end

RegisterNetEvent('QBCore:Client:OnPlayerLoaded', function()
    Wait(2000)
    local hudSettings = GetResourceKvpString('hudSettings')
    if hudSettings then loadSettings(json.decode(hudSettings)) end
    PlayerData = QBCore.Functions.GetPlayerData()
    Wait(3000)
    SetEntityHealth(PlayerPedId(), 200)
end)

RegisterNetEvent('QBCore:Client:OnPlayerUnload', function()
    PlayerData = {}
end)

RegisterNetEvent('QBCore:Player:SetPlayerData', function(val)
    PlayerData = val
end)

AddEventHandler('onResourceStart', function(resourceName)
    if GetCurrentResourceName() ~= resourceName then return end
    Wait(2000)
    local hudSettings = GetResourceKvpString('hudSettings')
    if hudSettings then loadSettings(json.decode(hudSettings)) end
end)

AddEventHandler('pma-voice:radioActive', function(data)
    radioActive = data
end)

-- Callbacks & Events
RegisterCommand('menu', function()
    Wait(50)
    if showMenu then return end
    TriggerEvent('hud:client:playOpenMenuSounds')
    SetNuiFocus(true, true)
    SendNUIMessage({ action = 'open' })
    showMenu = true
end)

RegisterNUICallback('closeMenu', function(_, cb)
    Wait(50)
    TriggerEvent('hud:client:playCloseMenuSounds')
    showMenu = false
    SetNuiFocus(false, false)
    cb('ok')
end)

RegisterKeyMapping('menu', 'Open Menu', 'keyboard', config.OpenMenu)

-- Reset hud
local function restartHud()
    TriggerEvent('hud:client:playResetHudSounds')
    QBCore.Functions.Notify(Lang:t('notify.hud_restart'), 'error')
    if IsPedInAnyVehicle(PlayerPedId()) then
        Wait(2600)
        SendNUIMessage({ action = 'car', show = false })
        SendNUIMessage({ action = 'car', show = true })
    end
    Wait(2600)
    SendNUIMessage({ action = 'hudtick', show = false })
    SendNUIMessage({ action = 'hudtick', show = true })
    Wait(2600)
    QBCore.Functions.Notify(Lang:t('notify.hud_start'), 'success')
end


-- Refresh Hud
function refreshHud()
    if refreshHudCalled then
        return
    else
        Wait(50)
        SendNUIMessage({ action = 'hudtick', show = false })
        SendNUIMessage({ action = 'hudtick', show = true })
        refreshHudCalled = true
    end
end

RegisterNUICallback('restartHud', function(_, cb)
    Wait(50)
    restartHud()
    cb('ok')
end)

RegisterCommand('resethud', function()
    Wait(50)
    restartHud()
end)

RegisterNUICallback('resetStorage', function(_, cb)
    Wait(50)
    TriggerEvent('hud:client:resetStorage')
    cb('ok')
end)

RegisterNetEvent('hud:client:resetStorage', function()
    Wait(50)
    if Menu.isResetSoundsChecked then
        TriggerServerEvent('InteractSound_SV:PlayOnSource', 'airwrench', 0.1)
    end
    QBCore.Functions.TriggerCallback('hud:server:getMenu', function(menu)
        loadSettings(menu); SetResourceKvp('hudSettings', json.encode(menu))
    end)
end)

-- Notifications
RegisterNUICallback('openMenuSounds', function(_, cb)
    Wait(50)
    Menu.isOpenMenuSoundsChecked = not Menu.isOpenMenuSoundsChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNetEvent('hud:client:playOpenMenuSounds', function()
    Wait(50)
    if not Menu.isOpenMenuSoundsChecked then return end
    TriggerServerEvent('InteractSound_SV:PlayOnSource', 'monkeyopening', 0.5)
end)

RegisterNetEvent('hud:client:playCloseMenuSounds', function()
    Wait(50)
    if not Menu.isOpenMenuSoundsChecked then return end
    TriggerServerEvent('InteractSound_SV:PlayOnSource', 'catclosing', 0.05)
end)

RegisterNUICallback('resetHudSounds', function(_, cb)
    Wait(50)
    Menu.isResetSoundsChecked = not Menu.isResetSoundsChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNetEvent('hud:client:playResetHudSounds', function()
    Wait(50)
    if not Menu.isResetSoundsChecked then return end
    TriggerServerEvent('InteractSound_SV:PlayOnSource', 'airwrench', 0.1)
end)

RegisterNUICallback('checklistSounds', function(_, cb)
    Wait(50)
    TriggerEvent('hud:client:checklistSounds')
    cb('ok')
end)

RegisterNetEvent('hud:client:checklistSounds', function()
    Wait(50)
    Menu.isListSoundsChecked = not Menu.isListSoundsChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
end)

RegisterNetEvent('hud:client:playHudChecklistSound', function()
    Wait(50)
    if not Menu.isListSoundsChecked then return end
    TriggerServerEvent('InteractSound_SV:PlayOnSource', 'shiftyclick', 0.5)
end)

RegisterNUICallback('showOutMap', function(_, cb)
    Wait(50)
    Menu.isOutMapChecked = not Menu.isOutMapChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNUICallback('showOutCompass', function(_, cb)
    Wait(50)
    Menu.isOutCompassChecked = not Menu.isOutCompassChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNUICallback('showFollowCompass', function(_, cb)
    Wait(50)
    Menu.isCompassFollowChecked = not Menu.isCompassFollowChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNUICallback('showMapNotif', function(_, cb)
    Wait(50)
    Menu.isMapNotifChecked = not Menu.isMapNotifChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNUICallback('showFuelAlert', function(_, cb)
    Wait(50)
    Menu.isLowFuelChecked = not Menu.isLowFuelChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNUICallback('showCinematicNotif', function(_, cb)
    Wait(50)
    Menu.isCinematicNotifChecked = not Menu.isCinematicNotifChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

-- Status
RegisterNUICallback('dynamicHealth', function(_, cb)
    Wait(50)
    TriggerEvent('hud:client:ToggleHealth')
    cb('ok')
end)

RegisterNetEvent('hud:client:ToggleHealth', function()
    Wait(50)
    Menu.isDynamicHealthChecked = not Menu.isDynamicHealthChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
end)

RegisterNUICallback('dynamicArmor', function(_, cb)
    Wait(50)
    Menu.isDynamicArmorChecked = not Menu.isDynamicArmorChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNUICallback('dynamicHunger', function(_, cb)
    Wait(50)
    Menu.isDynamicHungerChecked = not Menu.isDynamicHungerChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNUICallback('dynamicThirst', function(_, cb)
    Wait(50)
    Menu.isDynamicThirstChecked = not Menu.isDynamicThirstChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNUICallback('dynamicStress', function(_, cb)
    Wait(50)
    Menu.isDynamicStressChecked = not Menu.isDynamicStressChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNUICallback('dynamicOxygen', function(_, cb)
    Wait(50)
    Menu.isDynamicOxygenChecked = not Menu.isDynamicOxygenChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

-- Vehicle
RegisterNUICallback('changeFPS', function(_, cb)
    Wait(50)
    Menu.isChangeFPSChecked = not Menu.isChangeFPSChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNUICallback('HideMap', function(_, cb)
    Wait(50)
    Menu.isHideMapChecked = not Menu.isHideMapChecked
    DisplayRadar(not Menu.isHideMapChecked)
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNetEvent('hud:client:LoadMap', function()
    Wait(50)
    -- Credit to Dalrae for the solve.
    local defaultAspectRatio = 1920 / 1080 -- Don't change this.
    local resolutionX, resolutionY = GetActiveScreenResolution()
    local aspectRatio = resolutionX / resolutionY
    local minimapOffset = 0
    if aspectRatio > defaultAspectRatio then
        minimapOffset = ((defaultAspectRatio - aspectRatio) / 3.6) - 0.008
    end
    if Menu.isToggleMapShapeChecked == 'square' then
        RequestStreamedTextureDict('squaremap', false)
        if not HasStreamedTextureDictLoaded('squaremap') then
            Wait(150)
        end
        if Menu.isMapNotifChecked then
            QBCore.Functions.Notify(Lang:t('notify.load_square_map'))
        end
        SetMinimapClipType(0)
        AddReplaceTexture('platform:/textures/graphics', 'radarmasksm', 'squaremap', 'radarmasksm')
        AddReplaceTexture('platform:/textures/graphics', 'radarmask1g', 'squaremap', 'radarmasksm')
        -- 0.0 = nav symbol and icons left
        -- 0.1638 = nav symbol and icons stretched
        -- 0.216 = nav symbol and icons raised up
        SetMinimapComponentPosition('minimap', 'L', 'B', 0.0 + minimapOffset, -0.047, 0.1638, 0.183)

        -- icons within map
        SetMinimapComponentPosition('minimap_mask', 'L', 'B', 0.0 + minimapOffset, 0.0, 0.128, 0.20)

        -- -0.01 = map pulled left
        -- 0.025 = map raised up
        -- 0.262 = map stretched
        -- 0.315 = map shorten
        SetMinimapComponentPosition('minimap_blur', 'L', 'B', -0.01 + minimapOffset, 0.025, 0.262, 0.300)
        SetBlipAlpha(GetNorthRadarBlip(), 0)
        SetRadarBigmapEnabled(true, false)
        SetMinimapClipType(0)
        Wait(50)
        SetRadarBigmapEnabled(false, false)
        if Menu.isToggleMapBordersChecked then
            showCircleB = false
            showSquareB = true
        end
        Wait(1200)
        if Menu.isMapNotifChecked then
            QBCore.Functions.Notify(Lang:t('notify.loaded_square_map'))
        end
    elseif Menu.isToggleMapShapeChecked == 'circle' then
        RequestStreamedTextureDict('circlemap', false)
        if not HasStreamedTextureDictLoaded('circlemap') then
            Wait(150)
        end
        if Menu.isMapNotifChecked then
            QBCore.Functions.Notify(Lang:t('notify.load_circle_map'))
        end
        SetMinimapClipType(1)
        AddReplaceTexture('platform:/textures/graphics', 'radarmasksm', 'circlemap', 'radarmasksm')
        AddReplaceTexture('platform:/textures/graphics', 'radarmask1g', 'circlemap', 'radarmasksm')
        -- -0.0100 = nav symbol and icons left
        -- 0.180 = nav symbol and icons stretched
        -- 0.258 = nav symbol and icons raised up
        SetMinimapComponentPosition('minimap', 'L', 'B', -0.0100 + minimapOffset, -0.030, 0.180, 0.258)

        -- icons within map
        SetMinimapComponentPosition('minimap_mask', 'L', 'B', 0.200 + minimapOffset, 0.0, 0.065, 0.20)

        -- -0.00 = map pulled left
        -- 0.015 = map raised up
        -- 0.252 = map stretched
        -- 0.338 = map shorten
        SetMinimapComponentPosition('minimap_blur', 'L', 'B', -0.00 + minimapOffset, 0.015, 0.252, 0.338)
        SetBlipAlpha(GetNorthRadarBlip(), 0)
        SetMinimapClipType(1)
        SetRadarBigmapEnabled(true, false)
        Wait(50)
        SetRadarBigmapEnabled(false, false)
        if Menu.isToggleMapBordersChecked then
            showSquareB = false
            showCircleB = true
        end
        Wait(1200)
        if Menu.isMapNotifChecked then
            QBCore.Functions.Notify(Lang:t('notify.loaded_circle_map'))
        end
    end
end)

RegisterNUICallback('ToggleMapShape', function(_, cb)
    Wait(50)
    if not Menu.isHideMapChecked then
        Menu.isToggleMapShapeChecked = Menu.isToggleMapShapeChecked == 'circle' and 'square' or 'circle'
        Wait(50)
        TriggerEvent('hud:client:LoadMap')
    end
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNUICallback('ToggleMapBorders', function(_, cb)
    Wait(50)
    Menu.isToggleMapBordersChecked = not Menu.isToggleMapBordersChecked
    if Menu.isToggleMapBordersChecked then
        if Menu.isToggleMapShapeChecked == 'square' then
            showSquareB = true
        else
            showCircleB = true
        end
    else
        showSquareB = false
        showCircleB = false
    end
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNUICallback('dynamicEngine', function(_, cb)
    Wait(50)
    Menu.isDynamicEngineChecked = not Menu.isDynamicEngineChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNUICallback('dynamicNitro', function(_, cb)
    Wait(50)
    Menu.isDynamicNitroChecked = not Menu.isDynamicNitroChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

-- Compass
RegisterNUICallback('showCompassBase', function(_, cb)
    Wait(50)
    Menu.isCompassShowChecked = not Menu.isCompassShowChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNUICallback('showStreetsNames', function(_, cb)
    Wait(50)
    Menu.isShowStreetsChecked = not Menu.isShowStreetsChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNUICallback('showPointerIndex', function(_, cb)
    Wait(50)
    Menu.isPointerShowChecked = not Menu.isPointerShowChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNUICallback('showDegreesNum', function(_, cb)
    Wait(50)
    Menu.isDegreesShowChecked = not Menu.isDegreesShowChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNUICallback('changeCompassFPS', function(_, cb)
    Wait(50)
    Menu.isChangeCompassFPSChecked = not Menu.isChangeCompassFPSChecked
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNUICallback('cinematicMode', function(_, cb)
    Wait(50)
    if Menu.isCinematicModeChecked then
        CinematicShow(false)
        Menu.isCinematicModeChecked = false
        if Menu.isCinematicNotifChecked then
            QBCore.Functions.Notify(Lang:t('notify.cinematic_off'), 'error')
        end
        DisplayRadar(1)
    else
        CinematicShow(true)
        Menu.isCinematicModeChecked = true
        if Menu.isCinematicNotifChecked then
            QBCore.Functions.Notify(Lang:t('notify.cinematic_on'))
        end
    end
    TriggerEvent('hud:client:playHudChecklistSound')
    saveSettings()
    cb('ok')
end)

RegisterNetEvent('hud:client:ToggleAirHud', function()
    showAltitude = not showAltitude
end)

RegisterNetEvent('hud:client:UpdateNeeds', function(newHunger, newThirst) -- Triggered in qb-core
    hunger = newHunger
    thirst = newThirst
end)

RegisterNetEvent('hud:client:UpdateStress', function(newStress) -- Add this event with adding stress elsewhere
    stress = newStress
end)

RegisterNetEvent('hud:client:ToggleShowSeatbelt', function()
    showSeatbelt = not showSeatbelt
end)

RegisterNetEvent('seatbelt:client:ToggleSeatbelt', function() -- Triggered in smallresources
    seatbeltOn = not seatbeltOn
end)

RegisterNetEvent('seatbelt:client:ToggleCruise', function() -- Triggered in smallresources
    cruiseOn = not cruiseOn
end)

RegisterNetEvent('hud:client:UpdateNitrous', function(_, nitroLevel, bool)
    nos = nitroLevel
    nitroActive = bool
end)

-- AddEventHandler('hud:client:UpdateSafeZone', function(checkZoneStatus)
--     SafeZone = checkZone
--     print(SafeZone)
-- end)

RegisterNetEvent('hud:client:UpdateHarness', function(harnessHp)
    hp = harnessHp
end)

RegisterNetEvent('qb-admin:client:ToggleDevmode', function()
    dev = not dev
end)

local prevPlayerStats = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil }

local function updatePlayerHud(data)
    local shouldUpdate = false
    for k, v in pairs(data) do
        if prevPlayerStats[k] ~= v then
            shouldUpdate = true
            break
        end
    end
    prevPlayerStats = data
    if shouldUpdate then
        SendNUIMessage({
            action = 'hudtick',
            show = data[1],
            dynamicHealth = data[2],
            dynamicArmor = data[3],
            dynamicHunger = data[4],
            dynamicThirst = data[5],
            dynamicStress = data[6],
            dynamicOxygen = data[7],
            dynamicEngine = data[8],
            dynamicNitro = data[9],
            health = data[10],
            playerDead = data[11],
            armor = data[12],
            thirst = data[13],
            hunger = data[14],
            stress = data[15],
            voice = data[16],
            radio = data[17],
            talking = data[18],
            armed = data[19],
            oxygen = data[20],
            parachute = data[21],
            nos = data[22],
            cruise = data[23],
            nitroActive = data[24],
            harness = data[25],
            hp = data[26],
            speed = data[27],
            engine = data[28],
            cinematic = data[29],
            dev = data[30],
            SafeZone = data[31],
            radioActive = data[32],
        })
    end
end

local prevVehicleStats = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil }

local function updateVehicleHud(data)
    local shouldUpdate = false
    for k, v in pairs(data) do
        if prevVehicleStats[k] ~= v then
            shouldUpdate = true
            break
        end
    end
    prevVehicleStats = data
    if shouldUpdate then
        SendNUIMessage({
            action = 'car',
            show = data[1],
            isPaused = data[2],
            seatbelt = data[3],
            speed = data[4],
            fuel = data[5],
            altitude = data[6],
            showAltitude = data[7],
            showSeatbelt = data[8],
            showSquareB = data[9],
            showCircleB = data[10],
        })
    end
end

local lastFuelUpdate = 0
local lastFuelCheck = {}

local function getFuelLevel(vehicle)
    local updateTick = GetGameTimer()
    if (updateTick - lastFuelUpdate) > 2000 then
        lastFuelUpdate = updateTick
        lastFuelCheck = math.floor(exports['qb-fuel']:GetFuel(vehicle))
    end
    return lastFuelCheck
end

-- HUD Update loop

CreateThread(function()
    local wasInVehicle = false
    while true do
        if Menu.isChangeFPSChecked then
            Wait(500)
        else
            Wait(50)
        end
        if LocalPlayer.state.isLoggedIn then
            local show = true
            local player = PlayerPedId()
            local playerId = PlayerId()
            local weapon = GetSelectedPedWeapon(player)
            -- Player hud
            if not config.WhitelistedWeaponArmed[weapon] then
                if weapon ~= `WEAPON_UNARMED` then
                    armed = true
                else
                    armed = false
                end
            end
            playerDead = IsEntityDead(player) or PlayerData.metadata['inlaststand'] or PlayerData.metadata['isdead'] or false
            parachute = GetPedParachuteState(player)
            -- Stamina
            --if not IsEntityInWater(player) then
                --oxygen = 100 - GetPlayerSprintStaminaRemaining(playerId)
            --end
            -- Oxygen
            if IsEntityInWater(player) then
                oxygen = GetPlayerUnderwaterTimeRemaining(playerId) * 10
            end
            -- Player hud
            local talking = NetworkIsPlayerTalking(playerId)
            local voice = 0
            if LocalPlayer.state['proximity'] then
                voice = LocalPlayer.state['proximity'].distance
            end
            if IsPauseMenuActive() then
                refreshHudCalled = false
                show = false
            else
                refreshHud()
                refreshHudCalled = true
            end
            local vehicle = GetVehiclePedIsIn(player)
            if not (IsPedInAnyVehicle(player) and not IsThisModelABicycle(vehicle)) then
                updatePlayerHud({
                    show,
                    Menu.isDynamicHealthChecked,
                    Menu.isDynamicArmorChecked,
                    Menu.isDynamicHungerChecked,
                    Menu.isDynamicThirstChecked,
                    Menu.isDynamicStressChecked,
                    Menu.isDynamicOxygenChecked,
                    Menu.isDynamicEngineChecked,
                    Menu.isDynamicNitroChecked,
                    GetEntityHealth(player) - 100,
                    playerDead,
                    GetPedArmour(player),
                    thirst,
                    hunger,
                    stress,
                    voice,
                    LocalPlayer.state['radioChannel'],
                    talking,
                    armed,
                    oxygen,
                    parachute,
                    -1,
                    cruiseOn,
                    nitroActive,
                    harness,
                    hp,
                    math.ceil(GetEntitySpeed(vehicle) * speedMultiplier),
                    -1,
                    Menu.isCinematicModeChecked,
                    dev,
                    SafeZone,
                    radioActive,
                })
            end
            -- Vehicle hud
            if IsPedInAnyHeli(player) or IsPedInAnyPlane(player) then
                showAltitude = true
                showSeatbelt = false
            end
            if IsPedInAnyVehicle(player) and not IsThisModelABicycle(vehicle) then
                if not wasInVehicle then
                    DisplayRadar(true)
                end
                wasInVehicle = true
                updatePlayerHud({
                    show,
                    Menu.isDynamicHealthChecked,
                    Menu.isDynamicArmorChecked,
                    Menu.isDynamicHungerChecked,
                    Menu.isDynamicThirstChecked,
                    Menu.isDynamicStressChecked,
                    Menu.isDynamicOxygenChecked,
                    Menu.isDynamicEngineChecked,
                    Menu.isDynamicNitroChecked,
                    GetEntityHealth(player) - 100,
                    playerDead,
                    GetPedArmour(player),
                    thirst,
                    hunger,
                    stress,
                    voice,
                    LocalPlayer.state['radioChannel'],
                    talking,
                    armed,
                    oxygen,
                    GetPedParachuteState(player),
                    nos,
                    cruiseOn,
                    nitroActive,
                    harness,
                    hp,
                    math.ceil(GetEntitySpeed(vehicle) * speedMultiplier),
                    (GetVehicleEngineHealth(vehicle) / 10),
                    Menu.isCinematicModeChecked,
                    dev,
                    SafeZone,
                    radioActive,
                })
                updateVehicleHud({
                    show,
                    IsPauseMenuActive(),
                    seatbeltOn,
                    math.ceil(GetEntitySpeed(vehicle) * speedMultiplier),
                    getFuelLevel(vehicle),
                    math.ceil(GetEntityCoords(player).z * 0.5),
                    showAltitude,
                    showSeatbelt,
                    showSquareB,
                    showCircleB,
                })
                showAltitude = false
                showSeatbelt = true
            else
                if wasInVehicle then
                    wasInVehicle = false
                    SendNUIMessage({
                        action = 'car',
                        show = false,
                        seatbelt = false,
                        cruise = false,
                    })
                    seatbeltOn = false
                    cruiseOn = false
                    harness = false
                end
                DisplayRadar(Menu.isOutMapChecked)
            end
        else
            SendNUIMessage({
                action = 'hudtick',
                show = false
            })
        end
    end
end)

-- Low fuel
CreateThread(function()
    while true do
        if LocalPlayer.state.isLoggedIn then
            local ped = PlayerPedId()
            if IsPedInAnyVehicle(ped, false) and not IsThisModelABicycle(GetEntityModel(GetVehiclePedIsIn(ped, false))) then
                if exports['qb-fuel']:GetFuel(GetVehiclePedIsIn(ped, false)) <= 20 then -- At 20% Fuel Left
                    if Menu.isLowFuelChecked then
                        TriggerServerEvent('InteractSound_SV:PlayOnSource', 'pager', 0.10)
                        QBCore.Functions.Notify(Lang:t('notify.low_fuel'), 'error')
                        Wait(60000) -- repeats every 1 min until empty
                    end
                end
            end
        end
        Wait(10000)
    end
end)

-- Money HUD

local Round = math.floor

RegisterNetEvent('hud:client:ShowAccounts', function(type, amount)
    if type == 'cash' then
        SendNUIMessage({
            action = 'show',
            type = 'cash',
            cash = Round(amount)
        })
    else
        SendNUIMessage({
            action = 'show',
            type = 'bank',
            bank = Round(amount)
        })
    end
end)

RegisterNetEvent('hud:client:OnMoneyChange', function(type, amount, isMinus)
    cashAmount = PlayerData.money['cash']
    bankAmount = PlayerData.money['bank']
    SendNUIMessage({
        action = 'updatemoney',
        cash = Round(cashAmount),
        bank = Round(bankAmount),
        amount = Round(amount),
        minus = isMinus,
        type = type
    })
end)

-- Harness Check

CreateThread(function()
    while true do
        Wait(1000)

        local ped = PlayerPedId()
        if IsPedInAnyVehicle(ped, false) then
            hasHarness(PlayerData.items)
        end
    end
end)

-- Stress Gain

if not config.DisableStress then
    CreateThread(function() -- Speeding
        while true do
            if LocalPlayer.state.isLoggedIn then
                local ped = PlayerPedId()
                if IsPedInAnyVehicle(ped, false) then
                    local veh = GetVehiclePedIsIn(ped, false)
                    local vehClass = GetVehicleClass(veh)
                    local speed = GetEntitySpeed(veh) * speedMultiplier
                    local vehHash = GetEntityModel(veh)
                    if config.VehClassStress[tostring(vehClass)] and not config.WhitelistedVehicles[vehHash] then
                        local stressSpeed
                        if vehClass == 8 then -- Motorcycle exception for seatbelt
                            stressSpeed = config.MinimumSpeed
                        else
                            stressSpeed = seatbeltOn and config.MinimumSpeed or config.MinimumSpeedUnbuckled
                        end
                        if speed >= stressSpeed then
                            TriggerServerEvent('hud:server:GainStress', math.random(1, 3))
                        end
                    end
                end
            end
            Wait(10000)
        end
    end)

    CreateThread(function() -- Shooting
        while true do
            if LocalPlayer.state.isLoggedIn then
                local ped = PlayerPedId()
                local weapon = GetSelectedPedWeapon(ped)
                if weapon ~= `WEAPON_UNARMED` then
                    if IsPedShooting(ped) and not config.WhitelistedWeaponStress[weapon] then
                        if math.random() < config.StressChance then
                            TriggerServerEvent('hud:server:GainStress', math.random(1, 3))
                        end
                    end
                else
                    Wait(1000)
                end
            end
            Wait(0)
        end
    end)
end

-- Stress Screen Effects

local function GetBlurIntensity(stresslevel)
    for _, v in pairs(config.Intensity['blur']) do
        if stresslevel >= v.min and stresslevel <= v.max then
            return v.intensity
        end
    end
    return 1500
end

local function GetEffectInterval(stresslevel)
    for _, v in pairs(config.EffectInterval) do
        if stresslevel >= v.min and stresslevel <= v.max then
            return v.timeout
        end
    end
    return 60000
end

CreateThread(function()
    while true do
        local ped = PlayerPedId()
        local effectInterval = GetEffectInterval(stress)
        if stress >= 100 then
            local BlurIntensity = GetBlurIntensity(stress)
            local FallRepeat = math.random(2, 4)
            local RagdollTimeout = FallRepeat * 1750
            TriggerScreenblurFadeIn(1000.0)
            Wait(BlurIntensity)
            TriggerScreenblurFadeOut(1000.0)

            if not IsPedRagdoll(ped) and IsPedOnFoot(ped) and not IsPedSwimming(ped) then
                SetPedToRagdollWithFall(ped, RagdollTimeout, RagdollTimeout, 1, GetEntityForwardVector(ped), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
            end

            Wait(1000)
            for _ = 1, FallRepeat, 1 do
                Wait(750)
                DoScreenFadeOut(200)
                Wait(1000)
                DoScreenFadeIn(200)
                TriggerScreenblurFadeIn(1000.0)
                Wait(BlurIntensity)
                TriggerScreenblurFadeOut(1000.0)
            end
        elseif stress >= config.MinimumStress then
            local BlurIntensity = GetBlurIntensity(stress)
            TriggerScreenblurFadeIn(1000.0)
            Wait(BlurIntensity)
            TriggerScreenblurFadeOut(1000.0)
        end
        Wait(effectInterval)
    end
end)



-- Minimap update
CreateThread(function()
    while true do
        SetRadarBigmapEnabled(false, false)
        SetRadarZoom(100000000000)
        Wait(500)
    end
end)

local function BlackBars()
    DrawRect(0.0, 0.0, 2.0, w, 0, 0, 0, 255)
    DrawRect(0.0, 1.0, 2.0, w, 0, 0, 0, 255)
end

CreateThread(function()
    local minimap = RequestScaleformMovie('minimap')
    if not HasScaleformMovieLoaded(minimap) then
        RequestScaleformMovie(minimap)
        while not HasScaleformMovieLoaded(minimap) do
            Wait(1)
        end
    end
    while true do
        if w > 0 then
            BlackBars()
            DisplayRadar(0)
            SendNUIMessage({
                action = 'hudtick',
                show = false,
            })
            SendNUIMessage({
                action = 'car',
                show = false,
            })
        end
        Wait(0)
    end
end)

-- Compass
function round(num, numDecimalPlaces)
    local mult = 10 ^ (numDecimalPlaces or 0)
    return math.floor(num + 0.5 * mult)
end

local prevBaseplateStats = { nil, nil, nil, nil, nil, nil, nil }

local function updateBaseplateHud(data)
    local shouldUpdate = false
    for k, v in pairs(data) do
        if prevBaseplateStats[k] ~= v then
            shouldUpdate = true
            break
        end
    end
    prevBaseplateStats = data
    if shouldUpdate then
        SendNUIMessage({
            action = 'baseplate',
            show = data[1],
            street1 = data[2],
            street2 = data[3],
            showCompass = data[4],
            showStreets = data[5],
            showPointer = data[6],
            showDegrees = data[7],
        })
    end
end

local lastCrossroadUpdate = 0
local lastCrossroadCheck = {}

local function getCrossroads(player)
    local updateTick = GetGameTimer()
    if updateTick - lastCrossroadUpdate > 1500 then
        local pos = GetEntityCoords(player)
        local street1, street2 = GetStreetNameAtCoord(pos.x, pos.y, pos.z)
        lastCrossroadUpdate = updateTick
        lastCrossroadCheck = { GetStreetNameFromHashKey(street1), GetStreetNameFromHashKey(street2) }
    end
    return lastCrossroadCheck
end

-- Compass Update loop

CreateThread(function()
    local lastHeading = 1
    local heading
    while true do
        if Menu.isChangeCompassFPSChecked then
            Wait(50)
        else
            Wait(0)
        end
        local player = PlayerPedId()
        local camRot = GetGameplayCamRot(0)
        if Menu.isCompassFollowChecked then
            heading = tostring(round(360.0 - ((camRot.z + 360.0) % 360.0)))
        else
            heading = tostring(round(360.0 - GetEntityHeading(player)))
        end
        if heading == '360' then heading = '0' end
        if heading ~= lastHeading then
            local show = IsPedInAnyVehicle(player)
            local crossroads = getCrossroads(player)
            SendNUIMessage({
                action = 'update',
                value = heading
            })
            if not Menu.isOutCompassChecked then
                updateBaseplateHud({
                    show,
                    show and crossroads[1] or "",
                    show and crossroads[2] or "",
                    Menu.isCompassShowChecked,
                    Menu.isShowStreetsChecked,
                    Menu.isPointerShowChecked,
                    Menu.isDegreesShowChecked,
                })
            else
                updateBaseplateHud({
                    true,
                    crossroads[1],
                    crossroads[2],
                    Menu.isCompassShowChecked,
                    Menu.isShowStreetsChecked,
                    Menu.isPointerShowChecked,
                    Menu.isDegreesShowChecked,
                })
            end
        end
        lastHeading = heading
    end
end)

Citizen.CreateThread(function()
    while true do
        local player = GetPlayerPed(-1)
        local vehicle = GetVehiclePedIsIn(player, false)

        if IsPedInAnyVehicle(player, false) and GetIsVehicleEngineRunning(vehicle) then
        --print("is a car beu")
            local rpmlol = GetVehicleCurrentRpm(vehicle)
            local selectedgear = getSelectedGear()
            local gearlol = getinfo(selectedgear)
            --print("RPM: " .. rpm)  -- Debugging line

            SendNUIMessage({
                rpm = rpmlol,
                gear = gearlol
            })
        end
        Citizen.Wait(100)
    end
end)

TriggerEvent('hud:client:LoadMap')
